

function setup() {
  createCanvas(1000, 800, WEBGL);
  fill(204);
  
  
  
};

function draw() {

  background(0);


let ax=[0, 48.7379275423940, 382.792836865775, 176.335364470941, 176.335439470292, 48.7381868658718, -364.176476300880, -364.176476300880, -364.176476300880, -364.176476300880];
let bx=[176.335575687742, 176.335575687742, 382.792749839784, 48.7379109219530, 53.8833228641560, 53.8833302969833, -201.311558426080, -201.311558426080, -201.311558426080, -201.311558426080];
let cx=[285.316954888546, 285.316954888546, 285.316954888546, 157.719404041327, 84.0051880849077, -122.452206471353, -122.452275122644, -122.452275122644, -122.452275122644, -122.452275122644];
let dx=[285.316954888546, 285.316954888546, 285.316954888546, 285.316954888546, 206.457331583722, -127.597507334110, -285.317122592199, -285.317122592199, -285.317122592199, -285.317122592199];
let ex=[176.335575687742, 176.335575687742, 176.335575687742, 176.335575687742, 176.335575687742, 48.7380248405235, -364.176551300703, -364.176551300703, -364.176551300703, -364.176551300703];
let fx=[3.67394039744206e-14, 3.67394039744206e-14, 3.67394039744206e-14, 3.67394039744206e-14, 3.67394039744206e-14, 3.67394039744206e-14, -255.195101694437, -255.195101694437, -255.195101694437, -255.195101694437];
let gx=[-176.335575687742, -176.335575687742, -176.335575687742, -176.335575687742, -176.335575687742, -176.335575687742, -176.335575687742, -176.335575687742, -176.335575687742, -176.335575687742];
let hx=[-285.316954888546, -285.316954888546, -285.316954888546, -285.316954888546, -285.316954888546, -285.316954888546, -285.316954888546, -285.316954888546, -285.316954888546, -285.316954888546];
let ix=[-285.316954888546, -285.316954888546, -285.316954888546, -285.316954888546, -285.316954888546, -285.316954888546, -285.316954888546, -315.438710784526, -315.438710784526, -315.438710784526];
let jx=[-176.335575687742, -176.335575687742, -176.335575687742, -176.335575687742, -176.335575687742, -176.335575687742, -176.335575687742, -236.579087479702, -139.103161989365, -139.103161989365];
let kx=[0, 0, 0, 0, 0, 0, 0, -78.8597807365030, 18.6161447538339, -108.981248661730];
let lx=[67.3541964869379, 67.3541964869379, 352.670993943804, 67.3540390553450, 67.3540454038190, 67.3542028352804, -285.316559347426, -285.316559347426, -285.316559347426, -285.316559347426];
let mx=[217.962758401608, 217.962758401608, 217.962758401608, 217.962758401608, 108.981439334355, -176.335515554104, -176.335710150536, -176.335710150536, -176.335710150536, -176.335710150536];
let nx=[67.3541964869379, 67.3541964869379, 67.3541964869379, 67.3541964869379, 67.3541964869379, 67.3541964869379, -285.316760292289, -285.316760292289, -285.316760292289, -285.316760292289];
let ox=[-176.335575687742, -176.335575687742, -176.335575687742, -176.335575687742, -176.335575687742, -176.335575687742, -176.335575687742, -176.335575687742, -176.335575687742, -176.335575687742];
let px=[-176.335575687742, -176.335575687742, -176.335575687742, -176.335575687742, -176.335575687742, -176.335575687742, -176.335575687742, -217.962818535159, -217.962818535159, -217.962818535159];
let qx=[67.3541964869379, 67.3541964869379, 67.3541964869379, 67.3541964869379, 67.3541964869379, 67.3541964869379, 67.3541964869379, -9.72981280000000e-5, -9.72981271000000e-5, -176.335358122545];
let ay=[300.000000000000, 150.000082766732, -92.7050155456788, -242.705149465018, -242.704918640750, -150.000088166995, -150.000088166995, -150.000088166995, -150.000088166995, -150.000088166995];
let by=[242.705098312484, 242.705098312484, 92.7051810792160, -149.999866080569, -134.163916454065, -134.163921854330, -134.163921854330, -134.163921854330, -134.163921854330, -134.163921854330];
let cy=[92.7050983124842, 92.7050983124842, 92.7050983124842, 5.11526537000000e-5, -226.868977752199, -76.8689003858940, -76.8689003858940, -76.8689003858940, -76.8689003858940, -76.8689003858940];
let dy=[-92.7050983124842, -92.7050983124842, -92.7050983124842, -92.7050983124842, -335.410062705583, -92.7050155457980, -92.7050155457980, -92.7050155457980, -92.7050155457980, -92.7050155457980];
let ey=[-242.705098312484, -242.705098312484, -242.705098312484, -242.705098312484, -242.705098312484, -150.000051152653, -150.000051152653, -150.000051152653, -150.000051152653, -150.000051152653];
let fy=[-300.000000000000, -300.000000000000, -300.000000000000, -300.000000000000, -300.000000000000, -300.000000000000, -300.000000000000, -300.000000000000, -300.000000000000, -300.000000000000];
let gy=[-242.705098312484, -242.705098312484, -242.705098312484, -242.705098312484, -242.705098312484, -242.705098312484, -242.705098312484, -242.705098312484, -242.705098312484, -242.705098312484];
let hy=[-92.7050983124843, -92.7050983124843, -92.7050983124843, -92.7050983124843, -92.7050983124843, -92.7050983124843, -92.7050983124843, -92.7050983124843, -92.7050983124843, -92.7050983124843];
let iy=[92.7050983124842, 92.7050983124842, 92.7050983124842, 92.7050983124842, 92.7050983124842, 92.7050983124842, 92.7050983124842, -0.000133919385500000, -0.000133919385500000, -0.000133919385500000];
let jy=[242.705098312484, 242.705098312484, 242.705098312484, 242.705098312484, 242.705098312484, 242.705098312484, 242.705098312484, 57.2946338487447, 57.2948505347433, 57.2948505347433];
let ky=[300.000000000000, 300.000000000000, 300.000000000000, 300.000000000000, 300.000000000000, 300.000000000000, 300.000000000000, 57.2945510820127, 57.2947677680117, -35.4100627056280];
let ly=[207.294901687516, 207.294901687516, 0.000114380810300000, -207.294787306642, -207.294767768049, -207.294882148701, -207.294882148701, -207.294882148701, -207.294882148701, -207.294882148701];
let my=[-5.96867798957339e-15, -5.96867798957339e-15, -5.96867798957339e-15, -5.96867798957339e-15, -335.410011552930, -128.115109865477, -128.115109865477, -128.115109865477, -128.115109865477, -128.115109865477];
let ny=[-207.294901687516, -207.294901687516, -207.294901687516, -207.294901687516, -207.294901687516, -207.294901687516, -207.294901687516, -207.294901687516, -207.294901687516, -207.294901687516];
let oy=[-128.115294937453, -128.115294937453, -128.115294937453, -128.115294937453, -128.115294937453, -128.115294937453, -128.115294937453, -128.115294937453, -128.115294937453, -128.115294937453];
let py=[128.115294937453, 128.115294937453, 128.115294937453, 128.115294937453, 128.115294937453, 128.115294937453, 128.115294937453, -0.000185072038900000, -0.000185072038900000, -0.000185072038900000];
let qy=[207.294901687516, 207.294901687516, 207.294901687516, 207.294901687516, 207.294901687516, 207.294901687516, 207.294901687516, -0.000299452849300000, -0.000299452847978606, -128.115224246123];
let az=[0, -97.4759523828695, -157.719544852487, -8.70262080638895e-5, -6.29726441311450e-5, 97.4757875180621, 157.719763502080, 157.719763502080, 157.719763502080, 157.719763502080];
let bz=[0, 0, -157.719404041249, -97.4760394089999, 87.1852052525380, -87.1852109307184, 244.904483348288, 244.904483348288, 244.904483348288, 244.904483348288];
let cz=[0, 0, 0, -97.4759523828693, 244.904531455262, -87.1849590400051, 87.1850014688790, 87.1850014688790, 87.1850014688790, 87.1850014688790];
let dz=[0, 0, 0, 0, 157.719404041249, 97.4760394090001, 0.000140811363230853, 0.000140811363230853, 0.000140811363230853, 0.000140811363230853];
let ez=[0, 0, 0, 0, 0, 97.4759523828693, 157.719544852487, 157.719544852487, 157.719544852487, 157.719544852487];
let fz=[0, 0, 0, 0, 0, 0, 157.719404041249, 157.719404041249, 157.719404041249, 157.719404041249];
let gz=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
let hz=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
let iz=[0, 0, 0, 0, 0, 0, 0, -157.719404041249, -157.719404041249, -157.719404041249];
let jz=[0, 0, 0, 0, 0, 0, 0, -315.438808082498, -157.719544852486, -157.719544852486];
let kz=[0, 0, 0, 0, 0, 0, 0, -412.914760465367, -255.195497235355, -0.000140811361822636];
let lz=[0, 0, -217.962855699628, -0.000120267155054421, 0.000107570195139593, -0.000227837249840843, 217.962963269495, 217.962963269495, 217.962963269495, 217.962963269495];
let mz=[0, 0, 0, 0, 217.962855699628, 0.000120267155182319, 1.74111975135898e-10, 1.74111975135898e-10, 1.74111975135898e-10, 1.74111975135898e-10];
let nz=[0, 0, 0, 0, 0, 0, 217.962855699629, 217.962855699629, 217.962855699629, 217.962855699629];
let oz=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
let pz=[0, 0, 0, 0, 0, 0, 0, -217.962855699628, -217.962855699628, -217.962855699628];
let qz=[0, 0, 0, 0, 0, 0, 0, -352.671308806988, -352.671308806987, -1.71822636000000e-10];
let steparray=[0,1,2,3,4,5,6,7,8,9,8,7,6,5,4,3,2,1];
let sec=floor(millis()/1000);
let t=steparray[sec%18];


background(0)

let angle=((sec*5)%360);




//adapted from
//from https://discourse.processing.org/t/how-to-rotate-around-a-sphere/25072/24
//and math.fandom.com/wiki/Ellipsoid
//and Simon Greenwold.

  let latitude = (frameCount%360)*3.141/180;
  let longitude = (((frameCount-(latitude/2))/5)%360)*3.141/180;
  let radius=1000;
  
  let cam_x = radius * cos(latitude)*cos(longitude);
  let cam_y = radius * cos(latitude)*sin(longitude);
  let cam_z = radius * sin(latitude);
  camera(cam_x, cam_y, cam_z, 0, 0, 0, 0, 1, 0);

/**
 * Points and Lines. 
 * 
 * Points and lines can be used to draw basic geometry.
 * Change the value of the variable 'd' to scale the form.
 * The four variables set the positions based on the value of 'd'. 
 */




//let cam_x=350 * cos(angle);
//let cam_y=350*sin(angle);
//let cam_x=350*cos(angle);
//let cam_y=350*sin(angle);
//console.log(angle,cam_x,cam_y);

//camera(cam_x,cam_y,-900,0,0,0,0,1,0);


fill(127);






beginShape();
vertex(ax[t],ay[t],az[t]);
vertex(bx[t],by[t],bz[t]);
vertex(lx[t],ly[t],lz[t]);
endShape(CLOSE);
beginShape();
vertex(bx[t],by[t],bz[t]);
vertex(lx[t],ly[t],lz[t]);
vertex(mx[t],my[t],mz[t]);
endShape(CLOSE);
beginShape();
vertex(bx[t],by[t],bz[t]);
vertex(cx[t],cy[t],cz[t]);
vertex(mx[t],my[t],mz[t]);
endShape(CLOSE);
beginShape();
vertex(cx[t],cy[t],cz[t]);
vertex(dx[t],dy[t],dz[t]);
vertex(mx[t],my[t],mz[t]);
endShape(CLOSE);
beginShape();
vertex(dx[t],dy[t],dz[t]);
vertex(mx[t],my[t],mz[t]);
vertex(nx[t],ny[t],nz[t]);
endShape(CLOSE);
beginShape();
vertex(dx[t],dy[t],dz[t]);
vertex(ex[t],ey[t],ez[t]);
vertex(nx[t],ny[t],nz[t]);
endShape(CLOSE);
beginShape();
vertex(ex[t],ey[t],ez[t]);
vertex(nx[t],ny[t],nz[t]);
vertex(fx[t],fy[t],fz[t]);
endShape(CLOSE);
beginShape();
vertex(nx[t],ny[t],nz[t]);
vertex(fx[t],fy[t],fz[t]);
vertex(ox[t],oy[t],oz[t]);
endShape(CLOSE);
beginShape();
vertex(fx[t],fy[t],fz[t]);
vertex(ox[t],oy[t],oz[t]);
vertex(gx[t],gy[t],gz[t]);
endShape(CLOSE);
beginShape();
vertex(gx[t],gy[t],gz[t]);
vertex(hx[t],hy[t],hz[t]);
vertex(ox[t],oy[t],oz[t]);
endShape(CLOSE);
beginShape();
vertex(hx[t],hy[t],hz[t]);
vertex(ox[t],oy[t],oz[t]);
vertex(px[t],py[t],pz[t]);
endShape(CLOSE);
beginShape();
vertex(hx[t],hy[t],hz[t]);
vertex(px[t],py[t],pz[t]);
vertex(ix[t],iy[t],iz[t]);
endShape(CLOSE);
beginShape();
vertex(px[t],py[t],pz[t]);
vertex(ix[t],iy[t],iz[t]);
vertex(jx[t],jy[t],jz[t]);
endShape(CLOSE);
beginShape();
vertex(jx[t],jy[t],jz[t]);
vertex(px[t],py[t],pz[t]);
vertex(qx[t],qy[t],qz[t]);
endShape(CLOSE);
beginShape();
vertex(jx[t],jy[t],jz[t]);
vertex(qx[t],qy[t],qz[t]);
vertex(kx[t],ky[t],kz[t]);
endShape(CLOSE);


};

function polygon( x, y,  radius,  npoints) {
  var angle = 3 / npoints;
  beginShape();
  for (var a = 0; a < TWO_PI; a += angle) {
    var sx = x + cos(a) * radius;
    var sy = y + sin(a) * radius;
    vertex(sx, sy);
  }
  endShape(CLOSE);
};

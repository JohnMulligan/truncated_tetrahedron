

float[] ax = {0, 16.2459758474649, 127.597612288592, 58.7784548236471, 58.7784798234308, 16.2460622886237, -121.392158766960, -121.392158766960, -121.392158766960, -121.392158766960};
float[] bx = {58.7785252292473, 58.7785252292473, 127.597583279928, 16.2459703073178, 17.9611076213854, 17.9611100989943, -67.1038528086933, -67.1038528086933, -67.1038528086933, -67.1038528086933};
float[] cx = {95.1056516295153, 95.1056516295153, 95.1056516295153, 52.5731346804426, 28.0017293616361, -40.8174021571179, -40.8174250408815, -40.8174250408815, -40.8174250408815, -40.8174250408815};
float[] dx = {95.1056516295154, 95.1056516295154, 95.1056516295154, 95.1056516295154, 68.8191105279074, -42.5325024447033, -95.1057075307332, -95.1057075307332, -95.1057075307332, -95.1057075307332};
float[] ex = {58.7785252292473, 58.7785252292473, 58.7785252292473, 58.7785252292473, 58.7785252292473, 16.2460082801745, -121.392183766901, -121.392183766901, -121.392183766901, -121.392183766901};
float[] fx = {1.22464679914735e-14, 1.22464679914735e-14, 1.22464679914735e-14, 1.22464679914735e-14, 1.22464679914735e-14, 1.22464679914735e-14, -85.0650338981457, -85.0650338981457, -85.0650338981457, -85.0650338981457};
float[] gx = {-58.7785252292473, -58.7785252292473, -58.7785252292473, -58.7785252292473, -58.7785252292473, -58.7785252292473, -58.7785252292473, -58.7785252292473, -58.7785252292473, -58.7785252292473};
float[] hx = {-95.1056516295153, -95.1056516295153, -95.1056516295153, -95.1056516295153, -95.1056516295153, -95.1056516295153, -95.1056516295153, -95.1056516295153, -95.1056516295153, -95.1056516295153};
float[] ix = {-95.1056516295154, -95.1056516295154, -95.1056516295154, -95.1056516295154, -95.1056516295154, -95.1056516295154, -95.1056516295154, -105.146236928175, -105.146236928175, -105.146236928175};
float[] jx = {-58.7785252292473, -58.7785252292473, -58.7785252292473, -58.7785252292473, -58.7785252292473, -58.7785252292473, -58.7785252292473, -78.8596958265673, -46.3677206631212, -46.3677206631212};
float[] kx = {0, 0, 0, 0, 0, 0, 0, -26.2865935788344, 6.20538158461160, -36.3270828872428};
float[] lx = {22.4513988289793, 22.4513988289793, 117.556997981268, 22.4513463517819, 22.4513484679396, 22.4514009450932, -95.1055197824753, -95.1055197824753, -95.1055197824753, -95.1055197824753};
float[] mx = {72.6542528005361, 72.6542528005361, 72.6542528005361, 72.6542528005361, 36.3271464447850, -58.7785051847015, -58.7785700501786, -58.7785700501786, -58.7785700501786, -58.7785700501786};
float[] nx = {22.4513988289793, 22.4513988289793, 22.4513988289793, 22.4513988289793, 22.4513988289793, 22.4513988289793, -95.1055867640962, -95.1055867640962, -95.1055867640962, -95.1055867640962};
float[] ox = {-58.7785252292473, -58.7785252292473, -58.7785252292473, -58.7785252292473, -58.7785252292473, -58.7785252292473, -58.7785252292473, -58.7785252292473, -58.7785252292473, -58.7785252292473};
float[] px = {-58.7785252292473, -58.7785252292473, -58.7785252292473, -58.7785252292473, -58.7785252292473, -58.7785252292473, -58.7785252292473, -72.6542728450529, -72.6542728450529, -72.6542728450529};
float[] qx = {22.4513988289793, 22.4513988289793, 22.4513988289793, 22.4513988289793, 22.4513988289793, 22.4513988289793, 22.4513988289793, -3.24327095000000e-5, -3.24327094000000e-5, -58.7784527075146};
float[] ay = {100.000000000000, 50.0000275889106, -30.9016718485594, -80.9017164883392, -80.9016395469166, -50.0000293889982, -50.0000293889982, -50.0000293889982, -50.0000293889982, -50.0000293889982};
float[] by = {80.9016994374947, 80.9016994374947, 30.9017270264053, -49.9999553601896, -44.7213054846885, -44.7213072847766, -44.7213072847766, -44.7213072847766, -44.7213072847766, -44.7213072847766};
float[] cy = {30.9016994374947, 30.9016994374947, 30.9016994374947, 1.70508845000000e-5, -75.6229925840667, -25.6229667952978, -25.6229667952978, -25.6229667952978, -25.6229667952978, -25.6229667952978};
float[] dy = {-30.9016994374947, -30.9016994374947, -30.9016994374947, -30.9016994374947, -111.803354235194, -30.9016718485993, -30.9016718485993, -30.9016718485993, -30.9016718485993, -30.9016718485993};
float[] ey = {-80.9016994374947, -80.9016994374947, -80.9016994374947, -80.9016994374947, -80.9016994374947, -50.0000170508844, -50.0000170508844, -50.0000170508844, -50.0000170508844, -50.0000170508844};
float[] fy = {-100.000000000000, -100.000000000000, -100.000000000000, -100.000000000000, -100.000000000000, -100.000000000000, -100.000000000000, -100.000000000000, -100.000000000000, -100.000000000000};
float[] gy = {-80.9016994374947, -80.9016994374947, -80.9016994374947, -80.9016994374947, -80.9016994374947, -80.9016994374947, -80.9016994374947, -80.9016994374947, -80.9016994374947, -80.9016994374947};
float[] hy = {-30.9016994374948, -30.9016994374948, -30.9016994374948, -30.9016994374948, -30.9016994374948, -30.9016994374948, -30.9016994374948, -30.9016994374948, -30.9016994374948, -30.9016994374948};
float[] iy = {30.9016994374947, 30.9016994374947, 30.9016994374947, 30.9016994374947, 30.9016994374947, 30.9016994374947, 30.9016994374947, -4.46397952000000e-5, -4.46397952000000e-5, -4.46397952000000e-5};
float[] jy = {80.9016994374947, 80.9016994374947, 80.9016994374947, 80.9016994374947, 80.9016994374947, 80.9016994374947, 80.9016994374947, 19.0982112829150, 19.0982835115810, 19.0982835115810};
float[] ky = {100.000000000000, 100.000000000000, 100.000000000000, 100.000000000000, 100.000000000000, 100.000000000000, 100.000000000000, 19.0981836940043, 19.0982559226703, -11.8033542352093};
float[] ly = {69.0983005625052, 69.0983005625052, 3.81269368000000e-5, -69.0982624355473, -69.0982559226834, -69.0982940495672, -69.0982940495672, -69.0982940495672, -69.0982940495672, -69.0982940495672};
float[] my = {5.05835518820556e-14, 5.05835518820556e-14, 5.05835518820556e-14, 5.05835518820556e-14, -111.803337184310, -42.7050366218256, -42.7050366218256, -42.7050366218256, -42.7050366218256, -42.7050366218256};
float[] ny = {-69.0983005625052, -69.0983005625052, -69.0983005625052, -69.0983005625052, -69.0983005625052, -69.0983005625052, -69.0983005625052, -69.0983005625052, -69.0983005625052, -69.0983005625052};
float[] oy = {-42.7050983124843, -42.7050983124843, -42.7050983124843, -42.7050983124843, -42.7050983124843, -42.7050983124843, -42.7050983124843, -42.7050983124843, -42.7050983124843, -42.7050983124843};
float[] py = {42.7050983124842, 42.7050983124842, 42.7050983124842, 42.7050983124842, 42.7050983124842, 42.7050983124842, 42.7050983124842, -6.16906797000000e-5, -6.16906797000000e-5, -6.16906797000000e-5};
float[] qy = {69.0983005625052, 69.0983005625052, 69.0983005625052, 69.0983005625052, 69.0983005625052, 69.0983005625052, 69.0983005625052, -9.98176164000000e-5, -9.98176161896270e-5, -42.7050747487070};
float[] az = {0, -32.4919841276231, -52.5731816174954, -2.90087361776159e-5, -2.09908810718026e-5, 32.4919291726873, 52.5732545006932, 52.5732545006932, 52.5732545006932, 52.5732545006932};
float[] bz = {0, 0, -52.5731346804162, -32.4920131363333, 29.0617350841794, -29.0617369769060, 81.6348277827625, 81.6348277827625, 81.6348277827625, 81.6348277827625};
float[] cz = {0, 0, 0, -32.4919841276230, 81.6348438184208, -29.0616530133348, 29.0616671562926, 29.0616671562926, 29.0616671562926, 29.0616671562926};
float[] dz = {0, 0, 0, 0, 52.5731346804163, 32.4920131363335, 4.69371210165548e-5, 4.69371210165548e-5, 4.69371210165548e-5, 4.69371210165548e-5};
float[] ez = {0, 0, 0, 0, 0, 32.4919841276231, 52.5731816174956, 52.5731816174956, 52.5731816174956, 52.5731816174956};
float[] fz = {0, 0, 0, 0, 0, 0, 52.5731346804163, 52.5731346804163, 52.5731346804163, 52.5731346804163};
float[] gz = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
float[] hz = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
float[] iz = {0, 0, 0, 0, 0, 0, 0, -52.5731346804163, -52.5731346804163, -52.5731346804163};
float[] jz = {0, 0, 0, 0, 0, 0, 0, -105.146269360833, -52.5731816174954, -52.5731816174954};
float[] kz = {0, 0, 0, 0, 0, 0, 0, -137.638253488456, -85.0651657451184, -4.69371210736612e-5};
float[] lz = {0, 0, -72.6542852332094, -4.00890515592778e-5, 3.58567318447612e-5, -7.59457499110457e-5, 72.6543210898314, 72.6543210898314, 72.6543210898314, 72.6543210898314};
float[] mz = {0, 0, 0, 0, 72.6542852332095, 4.00890516800700e-5, 5.78796238469628e-11, 5.78796238469628e-11, 5.78796238469628e-11, 5.78796238469628e-11};
float[] nz = {0, 0, 0, 0, 0, 0, 72.6542852332095, 72.6542852332095, 72.6542852332095, 72.6542852332095};
float[] oz = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
float[] pz = {0, 0, 0, 0, 0, 0, 0, -72.6542852332095, -72.6542852332095, -72.6542852332095};
float[] qz = {0, 0, 0, 0, 0, 0, 0, -117.557102935663, -117.557102935662, -5.78736612000000e-11};



void setup() {
  size(1400, 875, P3D);
  fill(204);
}

void draw() {
  lights();
  background(0);
  
  
  
  /**
 * Primitives 3D. 
 * 
 * Placing mathematically 3D objects in synthetic space.
 * The lights() method reveals their imagined dimension.
 * The box() and sphere() functions each have one parameter
 * which is used to specify their size. These shapes are
 * positioned using the translate() function.
 */
 
background(0);
lights();




//adapted from
//from https://discourse.processing.org/t/how-to-rotate-around-a-sphere/25072/24
//and math.fandom.com/wiki/Ellipsoid
//and Simon Greenwold.

  float latitude = (frameCount%360)*3.141/180;
  float longitude = (((frameCount-(latitude/2))/5)%360)*3.141/180;
  float radius=1000;
  
  float cam_x = radius * cos(latitude)*cos(longitude);
  float cam_y = radius * cos(latitude)*sin(longitude);
  float cam_z = radius * sin(latitude);
  camera(cam_x, cam_y, cam_z, 0, 0, 0, 0, 1, 0);

/**
 * Points and Lines. 
 * 
 * Points and lines can be used to draw basic geometry.
 * Change the value of the variable 'd' to scale the form.
 * The four variables set the positions based on the value of 'd'. 
 */


translate(0, 0, 0);


//float t = millis() / 960.00f;

int [] steparray={0,1,2,3,4,5,6,7,8,9,8,7,6,5,4,3,2,1};

int t=steparray[millis()/1000 % 18];



fill(127);





beginShape();
vertex(ax[t],ay[t],az[t]);
vertex(bx[t],by[t],bz[t]);
vertex(lx[t],ly[t],lz[t]);
endShape(CLOSE);
beginShape()
vertex(bx[t],by[t],bz[t]);
vertex(lx[t],ly[t],lz[t]);
vertex(mx[t],my[t],mz[t]);
endShape(CLOSE);
beginShape()
vertex(bx[t],by[t],bz[t]);
vertex(cx[t],cy[t],cz[t]);
vertex(mx[t],my[t],mz[t]);
endShape(CLOSE);
beginShape()
vertex(cx[t],cy[t],cz[t]);
vertex(dx[t],dy[t],dz[t]);
vertex(mx[t],my[t],mz[t]);
endShape(CLOSE);
beginShape()
vertex(dx[t],dy[t],dz[t]);
vertex(mx[t],my[t],mz[t]);
vertex(nx[t],ny[t],nz[t]);
endShape(CLOSE);
beginShape()
vertex(dx[t],dy[t],dz[t]);
vertex(ex[t],ey[t],ez[t]);
vertex(nx[t],ny[t],nz[t]);
endShape(CLOSE);
beginShape()
vertex(ex[t],ey[t],ez[t]);
vertex(nx[t],ny[t],nz[t]);
vertex(fx[t],fy[t],fz[t]);
endShape(CLOSE);
beginShape()
vertex(nx[t],ny[t],nz[t]);
vertex(fx[t],fy[t],fz[t]);
vertex(ox[t],oy[t],oz[t]);
endShape(CLOSE);
beginShape()
vertex(fx[t],fy[t],fz[t]);
vertex(ox[t],oy[t],oz[t]);
vertex(gx[t],gy[t],gz[t]);
endShape(CLOSE);
beginShape()
vertex(gx[t],gy[t],gz[t]);
vertex(hx[t],hy[t],hz[t]);
vertex(ox[t],oy[t],oz[t]);
endShape(CLOSE);
beginShape()
vertex(hx[t],hy[t],hz[t]);
vertex(ox[t],oy[t],oz[t]);
vertex(px[t],py[t],pz[t]);
endShape(CLOSE);
beginShape()
vertex(hx[t],hy[t],hz[t]);
vertex(px[t],py[t],pz[t]);
vertex(ix[t],iy[t],iz[t]);
endShape(CLOSE);
beginShape()
vertex(px[t],py[t],pz[t]);
vertex(ix[t],iy[t],iz[t]);
vertex(jx[t],jy[t],jz[t]);
endShape(CLOSE);
beginShape()
vertex(jx[t],jy[t],jz[t]);
vertex(px[t],py[t],pz[t]);
vertex(qx[t],qy[t],qz[t]);
endShape(CLOSE);
beginShape()
vertex(jx[t],jy[t],jz[t]);
vertex(qx[t],qy[t],qz[t]);
vertex(kx[t],ky[t],kz[t]);
endShape(CLOSE);
// Draw white points
//stroke(255);
//point(p1, p1);
//point(p1, p3); 
//point(p2, p4);
//point(p3, p1); 
//point(p4, p2);
//point(p4, p4);



}

void polygon(float x, float y, float radius, int npoints) {
  float angle = TWO_PI / npoints;
  beginShape();
  for (float a = 0; a < TWO_PI; a += angle) {
    float sx = x + cos(a) * radius;
    float sy = y + sin(a) * radius;
    vertex(sx, sy);
  }
  endShape(CLOSE);
}

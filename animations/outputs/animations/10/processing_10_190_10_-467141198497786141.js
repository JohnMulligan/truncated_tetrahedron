

function setup() {
  createCanvas(1000, 800, WEBGL);
  fill(204);
  
  
  
}

function draw() {

  background(0);

let A_x=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let A_y=[1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0];
let A_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let B_x=[587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732];
let B_y=[809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474];
let B_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let C_x=[951.056516295153, 948.237243067134, 939.823182977197, 925.944935589366, 906.817913325098, 882.738997920687, 854.081932351625, 821.291519748564, 784.876719346919, 745.402746631917];
let C_y=[309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947];
let C_z=[0.0, 45.1704947580679, 89.639871760965, 132.717895713614, 173.735927328077, 212.057301666298, 247.087210190205, 278.28193313406, 305.157278897999, 327.296099469975];
let D_x=[951.056516295154, 958.723897340319, 981.0559486709138, 1016.0868776551093, 1060.685840930029, 1110.765540844147, 1161.555635181452, 1207.923730830422, 1244.723706314403, 1267.149341294363];
let D_y=[-309.016994374943, -304.678578974606, -291.730671864806, -270.374245109619, -240.940784340658, -203.887143574064, -159.788454111236, -109.329197588424, -53.292581735591, 7.451616250341];
let D_z=[0.0, -27.1744054313504, -49.529491932476, -62.592711113699, -62.562853318079, -46.591595967651, -13.003898438836, 38.557073610064, 107.070098884685, 190.165413900318];
let E_x=[587.785252292473, 600.55817401703, 638.1901314633308, 698.6468587279643, 778.625773917338, 873.689759006122, 978.457203665347, 1086.848441171908, 1192.3855523961008, 1288.5378555104794];
let E_y=[-809.016994374943, -803.01747759823, -785.064790317714, -755.298732566232, -713.959458936467, -661.397472141909, -598.08618885652, -524.635769190184, -441.806685403581, -350.521394374903];
let E_z=[0.0, -100.2611210847977, -194.548422458729, -277.176231213868, -343.029363494475, -387.832543349025, -408.397463565533, -402.835310860493, -370.720148133386, -313.187212370402];
let F_x=[0.0, 42.915086867185, 167.5338110871198, 361.9932875122383, 608.16266583453, 883.8330802890955, 1165.293415755893, 1429.911712643142, 1658.3649219994209, 1836.2425669508223];
let F_y=[-1000.000000000003, -991.352799268568, -965.894668737268, -925.024271123944, -870.90687438727, -806.248046037255, -734.018608939061, -657.165809215964, -578.346926944916, -499.718000772822];
let F_z=[0.0, -288.7551666550147, -551.968615523979, -766.894135521133, -915.982981875731, -988.566623891863, -981.616983707925, -899.533802410777, -753.062927317247, -557.576109326665];
let G_x=[-587.785252292477, -496.366083695025, -234.8664612030572, 160.7348248618383, 637.6165948391755, 1135.1883690155814, 1594.936598366436, 1969.063938156912, 2226.348932804412, 2354.3961935187453];
let G_y=[-809.016994374943, -796.112698669765, -758.89767255304, -701.604150951753, -630.465682000141, -552.654630877904, -475.094156813475, -403.368083504728, -340.926228783326, -288.718084832023];
let G_z=[0.0, -519.0226924708007, -972.910744184926, -1306.842737115722, -1484.565878487777, -1493.023668512267, -1342.630660703488, -1063.447204539657, -698.367527104371, -294.970195460281];
let H_x=[-951.056516295157, -806.619008536717, -401.3954167046022, 187.2997236051106, 851.7269374392185, 1478.8965601404334, 1975.047608823979, 2283.043052586318, 2388.8922426467507, 2317.1229446785055];
let H_y=[-309.016994374943, -293.566323582034, -250.296052407627, -187.644399554154, -117.21289519913, -50.801767731168, 2.508991268121, 38.454685635828, 58.340234844579, 68.33385670179];
let H_z=[0.0, -701.1113378154737, -1282.036139801542, -1649.049825511301, -1754.184774863368, -1602.451244356761, -1245.7964522769362, -766.503156575734, -255.499629534831, 208.110938371959];
let I_x=[-951.056516295157, -766.645603343162, -262.6873080628012, 429.4880138870326, 1139.5591787976216, 1711.4048251617276, 2046.9901381743186, 2126.524110782147, 2000.776246934808, 1762.2515611638746];
let I_y=[309.016994374947, 319.970181768056, 348.05795626667, 380.818191272967, 402.925757248508, 402.100373779132, 373.818624645362, 323.08798671802, 262.741881605229, 209.064654195311];
let I_z=[0.0, -763.8894767664217, -1350.5821254646357, -1636.356278704531, -1585.145151358501, -1252.043527315209, -757.0025899156881, -240.716397497828, 179.876015080442, 441.088623233611];
let J_x=[-587.785252292477, -392.061192725613, 123.4805755348768, 776.0743577444206, 1351.9821295388185, 1695.0157910832636, 1761.8128281665945, 1621.801873918889, 1408.7495345317668, 1252.9228037259736];
let J_y=[809.016994374947, 804.823173228621, 786.92677872265, 742.716318438379, 660.456852668372, 537.831500044917, 386.1870945689351, 228.135979488178, 89.663247671754, -9.353833640029];
let J_z=[0.0, -682.8332787051803, -1149.9966484133688, -1274.591627230903, -1065.029552534221, -649.320977401328, -208.8357046894751, 103.094002561398, 218.7883463788429, 167.513053658068];
let K_x=[0.0, 131.187482862491, 465.3879051315138, 855.9283883249866, 1145.3922253592605, 1244.7992505275945, 1172.8966574572387, 1037.09769808744, 970.486362900762, 1061.5672512585627];
let K_y=[999.999999999997, 988.936403274316, 952.31480681799, 882.96335688367, 777.347466306967, 642.448724868687, 497.4793741228821, 368.687089155247, 279.531290530687, 241.276145161991];
let K_z=[0.0, -410.2912576010243, -662.4392780650878, -678.0012206222559, -494.395512904279, -239.045077389683, -57.9788730946731, -39.497805010866, -173.4380295100851, -364.025917176342];
let first_x=[-224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276];
let first_y=[690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522];
let first_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let B_C_x=[587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473];
let B_C_y=[427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176];
let B_C_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let D_E_x=[587.785252292473, 602.277452069744, 644.767533031028, 712.358352415406, 800.425498463979, 902.9101842755595, 1012.703458956512, 1122.097826862081, 1223.278158657311, 1308.821312601464];
let D_E_y=[-427.050983124843, -421.055440498894, -403.161872956325, -373.648017058905, -332.971974682738, -281.765102550231, -220.82221257193, -151.089235104452, -73.64853661036, 10.297880386847];
let D_E_z=[0.0, -99.9781931490581, -192.327330431641, -269.912620271982, -326.556883352835, -357.443985377429, -359.437071953697, -331.291607913872, -273.749750042785, -189.509946556694];
let F_G_x=[-224.513988289796, -168.366340779915, -5.6635047089442, 247.1145594293063, 564.851276921485, 916.9279095298155, 1270.904753736361, 1596.1996077436, 1867.245809392849, 2065.7306080135672];
let F_G_y=[-690.983005625053, -681.328453765153, -653.062618750632, -608.202942586771, -549.867968389278, -481.943672383657, -408.676196952961, -334.241245889686, -262.342509588353, -195.886758648926];
let F_G_z=[0.0, -360.4705574501237, -686.26988898227, -946.686119125256, -1118.359309978489, -1187.638066487207, -1151.606965775571, -1017.712041075564, -802.13447552178, -527.247095677151];
let H_I_x=[-726.542528005357, -597.125337802077, -235.80086110106453, 283.8263465848043, 860.7444930518615, 1391.9209474526306, 1796.205250690616, 2030.1080721274461, 2091.875138951059, 2014.2202449874962];
let H_I_y=[-3e-12, 13.173555683042, 49.807533557064, 102.071964995263, 159.429938149119, 211.599927133678, 251.355120561857, 276.342804058961, 289.430172577439, 297.546888801662];
let H_I_z=[0.0, -612.1108763510431, -1113.470678938673, -1419.604684096812, -1490.9634607603168, -1338.863256997808, -1017.785381003772, -607.345459546403, -190.106093606876, 167.993932180173];
let last_x=[-224.513988289796, -79.462413984465, 297.8700286673248, 762.7968937591615, 1154.305790985659, 1369.2718593989805, 1402.0999010802157, 1332.599095660297, 1273.7143446579219, 1310.3452136560607];
let last_y=[690.983005625057, 683.223910334487, 656.309329588591, 602.20287627293, 515.329158859388, 399.1757303016943, 268.447925607397, 145.122357367345, 50.241383207779, -4.300037615425];
let last_z=[0.0, -500.0939656292497, -836.2683673034368, -919.6582316885109, -772.18138126416, -505.921178802815, -260.2373771282941, -132.211172350252, -136.330574333977, -210.078206481623];


let sec=floor(millis()/1000);
let steparray=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 8, 7, 6, 5, 4, 3, 2, 1];
let t=steparray[sec%18];

background(0)

let angle=((sec*5)%360);




//adapted from
//from https://discourse.processing.org/t/how-to-rotate-around-a-sphere/25072/24
//and math.fandom.com/wiki/Ellipsoid
//and Simon Greenwold.

  let latitude = (frameCount%360)*3.141/180;
  let longitude = (((frameCount-(latitude/2))/5)%360)*3.141/180;
  let radius=5000;
  
  let cam_x = radius * cos(latitude)*cos(longitude);
  let cam_y = radius * cos(latitude)*sin(longitude);
  let cam_z = radius * sin(latitude);
  camera(cam_x, cam_y, cam_z, 0, 0, 0, 0, 1, 0);

/**
 * Points and Lines. 
 * 
 * Points and lines can be used to draw basic geometry.
 * Change the value of the variable 'd' to scale the form.
 * The four variables set the positions based on the value of 'd'. 
 */




//let cam_x=350 * cos(angle);
//let cam_y=350*sin(angle);
//let cam_x=350*cos(angle);
//let cam_y=350*sin(angle);
//console.log(angle,cam_x,cam_y);

//camera(cam_x,cam_y,-900,0,0,0,0,1,0);


fill(127);

beginShape();
vertex(A_x[t],A_y[t],A_z[t]);
vertex(B_x[t],B_y[t],B_z[t]);
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(first_x[t],first_y[t],first_z[t]);
endShape(CLOSE);
beginShape();
vertex(B_x[t],B_y[t],B_z[t]);
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(C_x[t],C_y[t],C_z[t]);
endShape(CLOSE);
beginShape();
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(C_x[t],C_y[t],C_z[t]);
vertex(D_x[t],D_y[t],D_z[t]);
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
endShape(CLOSE);
beginShape();
vertex(D_x[t],D_y[t],D_z[t]);
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
vertex(E_x[t],E_y[t],E_z[t]);
endShape(CLOSE);
beginShape();
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
vertex(E_x[t],E_y[t],E_z[t]);
vertex(F_x[t],F_y[t],F_z[t]);
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
endShape(CLOSE);
beginShape();
vertex(F_x[t],F_y[t],F_z[t]);
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
vertex(G_x[t],G_y[t],G_z[t]);
endShape(CLOSE);
beginShape();
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
vertex(G_x[t],G_y[t],G_z[t]);
vertex(H_x[t],H_y[t],H_z[t]);
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
endShape(CLOSE);
beginShape();
vertex(H_x[t],H_y[t],H_z[t]);
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
vertex(I_x[t],I_y[t],I_z[t]);
endShape(CLOSE);
beginShape();
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
vertex(I_x[t],I_y[t],I_z[t]);
vertex(J_x[t],J_y[t],J_z[t]);
vertex(last_x[t],last_y[t],last_z[t]);
endShape(CLOSE);
beginShape();
vertex(J_x[t],J_y[t],J_z[t]);
vertex(K_x[t],K_y[t],K_z[t]);
vertex(last_x[t],last_y[t],last_z[t]);
endShape(CLOSE);

}

function polygon( x, y,  radius,  npoints) {
  var angle = 3 / npoints;
  beginShape();
  for (var a = 0; a < TWO_PI; a += angle) {
    var sx = x + cos(a) * radius;
    var sy = y + sin(a) * radius;
    vertex(sx, sy);
  }
  endShape(CLOSE);
}

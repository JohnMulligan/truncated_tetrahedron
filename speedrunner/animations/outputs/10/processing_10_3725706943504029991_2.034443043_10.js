

function setup() {
  createCanvas(1000, 800, WEBGL);
  fill(204);
  
  
  
}

function draw() {

  background(0);

let A_x=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let A_y=[1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0];
let A_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let B_x=[587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732];
let B_y=[809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474];
let B_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let C_x=[951.056516295153, 941.814706920499, 914.559511644446, 870.67770307562, 812.402033154485, 742.697628418478, 665.1111212879322, 583.5901937294599, 502.2827151023877, 425.325694262993];
let C_y=[309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947];
let C_z=[0.0, -81.4196321895832, -158.696549033287, -227.898820839445, -285.505364232078, -328.585098525633, -354.946082150799, -363.24704091535, -353.065613426404, -324.919841276231];
let D_x=[951.056516295154, 916.7913563896467, 818.8007968971859, 670.639961193562, 492.202610087155, 306.226334448045, 134.3911659391342, -6.23842518047408, -105.7538344054213, -162.459703072703];
let D_y=[-309.016994374943, -294.795312091901, -252.853879190099, -185.326719283224, -95.649684316156, 11.614365146149, 131.007722997453, 256.4555313384356, 381.5748755483186, 499.999553602047];
let D_z=[0.0, -210.8435161426382, -397.647174140869, -540.269123268268, -625.627724382891, -649.537582419547, -616.890808282712, -540.180656060578, -436.6892918456655, -324.9201313633336];
let E_x=[587.785252292473, 547.5622487360567, 434.0241970761789, 267.430426461949, 77.869497329524, -99.86584913534, -232.5779416797118, -295.1390170300111, -275.8805616935713, -179.6117000908944];
let E_y=[-809.016994374943, -789.320407316726, -730.735462429325, -634.850861468721, -504.538091114331, -344.208640297277, -160.035406393434, 39.9625655666826, 246.0564598231686, 447.2128260854639];
let E_z=[0.0, -177.9678792009653, -323.2014094456197, -408.678363926984, -418.011844188891, -348.796600044686, -213.661863218134, -38.550059854124, 141.8067469581245, 290.6165301333534];
let F_x=[0.0, -14.3375284349903, -49.5781997702071, -85.192366898657, -95.525855234769, -60.0537329420217, 27.3244804493432, 153.96931960391092, 291.8614301109257, 408.1736819315806];
let F_y=[-1000.000000000003, -971.600555642855, -888.414596334604, -756.648959015739, -586.9799132829723, -394.3636998866717, -196.8114690557278, -12.9273000325111, 141.4010081543096, 256.2302197305919];
let F_z=[0.0, 3.7148089986437, 27.8427811421523, 84.057265276544, 169.443182955077, 265.911035056664, 345.859596099218, 382.722269326087, 362.4473561576785, 290.6173697690783];
let G_x=[-587.785252292477, -538.2990383034663, -392.9654808520531, -165.306476403665, 112.241483489238, 384.9257819252673, 586.0975611479442, 661.625613887425, 596.4579894708747, 425.3262037221507];
let G_y=[-809.016994374943, -766.826275172085, -647.951708351208, -474.067798043903, -276.3043971831843, -87.5307156806377, 67.0914941332752, 177.8035973093799, 252.1317541026016, 309.0167767386854];
let G_z=[0.0, 259.6402697955807, 481.9669777492053, 627.836290407289, 661.662105697576, 565.598809918782, 355.5488456452317, 86.288764263659, -163.7898994390085, -324.9192917268567];
let H_x=[-951.056516295157, -809.2835646525543, -426.4039772597006, 77.50763728621, 533.149935497856, 779.7568714627834, 738.5610417682961, 459.79104216145595, 100.8597685659007, -162.4591629866213];
let H_y=[-309.016994374943, -259.038850535625, -128.20573840684, 35.051139463247, 176.2449711646397, 262.3299874798803, 298.6238673852352, 323.5963730095049, 383.0138105105766, 499.9994302211744];
let H_z=[0.0, 484.7742945687047, 814.7011132608583, 880.433251819526, 660.5871704456281, 243.617583185384, -196.82209716725026, -479.373045884378, -509.0699336088725, -324.9206809112037];
let I_x=[-951.056516295157, -802.6603158516217, -411.5909918511997, 73.69045823297682, 458.745165920803, 589.2524545998973, 443.3403498309792, 161.89264620108693, -33.9657642512063, -0.0005990996993];
let I_y=[309.016994374947, 357.956796991094, 483.169187065313, 631.445467365808, 747.6641397802227, 807.1686219146303, 829.4558757853501, 859.172827296433, 923.6282692167756, 999.9997532369144];
let I_z=[0.0, 449.5817561763323, 725.4414515019628, 718.367690888672, 437.1815410336231, 22.653919129265, -310.96294507044126, -399.4955237159145, -241.6300450573095, -0.000839636401675507];
let J_x=[-587.785252292477, -521.1475353069337, -355.8484683891916, -174.35568505183818, -50.801641108174, 8.3421239182863, 73.0085585382032, 218.62420480843093, 429.6989956475107, 587.7849126514147];
let J_y=[809.016994374947, 830.939868825357, 883.975185683475, 939.776466139818, 975.8460662285477, 989.4906434967693, 989.6693255041782, 974.2534175701999, 920.7908819141312, 809.0175461526604];
let J_z=[0.0, 168.5060023334593, 258.3083507695468, 243.635011113367, 172.11349101817711, 128.804187163311, 157.17381500846173, 205.0737438211705, 166.9931932826905, 0.000839635036076083];
let K_x=[0.0, -80.28070756611275, -286.7295037492644, -510.5238052150932, -583.419661033387, -368.5699805050207, 94.930108644385, 544.1559153635409, 674.3436422543377, 425.3268735369887];
let K_y=[999.999999999997, 965.793677684007, 876.0969619360354, 765.997081923508, 676.2598825241607, 622.7389215784412, 577.0723683404462, 494.7314457062299, 379.5043873190632, 309.0170526269284];
let K_z=[0.0, -243.0968422681887, -355.7979214405592, -244.993407889688, 79.7437198021568, 453.452383306844, 616.7923610118587, 419.6752237155725, -3.6641795603695, -324.9190016386829];
let first_x=[-224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276];
let first_y=[690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522];
let first_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let B_C_x=[587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473];
let B_C_y=[427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176];
let B_C_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let D_E_x=[587.785252292473, 553.203832371236, 455.449963230763, 311.339892044244, 145.280532791524, -15.403240861024, -145.6516874917458, -227.3378515036541, -252.5005927251173, -224.514188734604];
let D_E_y=[-427.050983124843, -407.397101586882, -349.435466853463, -256.11522702591, -132.184612711734, 16.050657874222, 181.048220393747, 354.4128277068039, 527.323508754767, 690.982388718257];
let D_E_z=[0.0, -178.8594086671015, -330.221642265648, -431.685140880553, -470.037541394593, -443.545423967688, -361.9987083405225, -244.516242378313, -115.565081311128, -0.000400890515];
let F_G_x=[-224.513988289796, -223.3225614081653, -212.8721121700201, -175.972823172177, -94.345950961057, 39.615750554083, 213.5246261321902, 393.3146050934979, 532.0995431081387, 587.7852311301097];
let F_G_y=[-690.983005625053, -659.30207109922, -567.3426705939, -424.436058070805, -246.116408854313, -53.26192977054, 130.224951766861, 281.3208311091426, 382.6932316563736, 427.0509179958672];
let F_G_z=[0.0, 72.2198912573107, 154.9094975734553, 249.258751210654, 341.805339256381, 405.959634598313, 411.240931001114, 337.667798028898, 189.3527413041712, 0.000759457511399733];
let H_I_x=[-726.542528005357, -597.8139663972955, -259.0829776727001, 159.588028999051, 487.335223562755, 585.2588964797873, 424.2239743064012, 114.38608707299592, -152.8003534185603, -224.5141675715903];
let H_I_y=[-3e-12, 42.44289068858, 150.928594353432, 279.149009247837, 379.2914366150867, 430.2336706693563, 450.1948221051282, 482.8014918125279, 563.5677850947086, 690.9824538470224];
let H_I_z=[0.0, 383.3474614696987, 614.7367636332463, 598.3391664274228, 340.319815273889, -39.007477007857, -352.1169375679303, -444.057597457905, -287.8125302818655, -0.001160348032699067];
let last_x=[-224.513988289796, -208.77287195203175, -182.0487048668987, -183.2033102422482, -216.841144892329, -217.5394361062567, -87.5619741455948, 192.7871728335917, 487.9685853759007, 587.7854315736917];
let last_y=[690.983005625057, 696.089419860194, 704.82886154891, 705.2519697683377, 694.6311033482414, 682.1965075982653, 671.6043641616963, 641.8389561254819, 559.6466122816986, 427.0515349030454];
let last_z=[0.0, -5.0896769276467, -30.8253043088252, -57.725261451729, -25.99522051580889, 107.6885855002719, 294.83215347785773, 391.4365817247185, 276.8908965109525, 0.001160348012493873];


let sec=floor(millis()/1000);
let steparray=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 8, 7, 6, 5, 4, 3, 2, 1];
let t=steparray[sec%18];

background(0)

let angle=((sec*5)%360);




//adapted from
//from https://discourse.processing.org/t/how-to-rotate-around-a-sphere/25072/24
//and math.fandom.com/wiki/Ellipsoid
//and Simon Greenwold.

  let latitude = (frameCount%360)*3.141/180;
  let longitude = (((frameCount-(latitude/2))/5)%360)*3.141/180;
  let radius=5000;
  
  let cam_x = radius * cos(latitude)*cos(longitude);
  let cam_y = radius * cos(latitude)*sin(longitude);
  let cam_z = radius * sin(latitude);
  camera(cam_x, cam_y, cam_z, 0, 0, 0, 0, 1, 0);

/**
 * Points and Lines. 
 * 
 * Points and lines can be used to draw basic geometry.
 * Change the value of the variable 'd' to scale the form.
 * The four variables set the positions based on the value of 'd'. 
 */




//let cam_x=350 * cos(angle);
//let cam_y=350*sin(angle);
//let cam_x=350*cos(angle);
//let cam_y=350*sin(angle);
//console.log(angle,cam_x,cam_y);

//camera(cam_x,cam_y,-900,0,0,0,0,1,0);


fill(127);

beginShape();
vertex(A_x[t],A_y[t],A_z[t]);
vertex(B_x[t],B_y[t],B_z[t]);
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(first_x[t],first_y[t],first_z[t]);
endShape(CLOSE);
beginShape();
vertex(B_x[t],B_y[t],B_z[t]);
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(C_x[t],C_y[t],C_z[t]);
endShape(CLOSE);
beginShape();
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(C_x[t],C_y[t],C_z[t]);
vertex(D_x[t],D_y[t],D_z[t]);
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
endShape(CLOSE);
beginShape();
vertex(D_x[t],D_y[t],D_z[t]);
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
vertex(E_x[t],E_y[t],E_z[t]);
endShape(CLOSE);
beginShape();
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
vertex(E_x[t],E_y[t],E_z[t]);
vertex(F_x[t],F_y[t],F_z[t]);
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
endShape(CLOSE);
beginShape();
vertex(F_x[t],F_y[t],F_z[t]);
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
vertex(G_x[t],G_y[t],G_z[t]);
endShape(CLOSE);
beginShape();
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
vertex(G_x[t],G_y[t],G_z[t]);
vertex(H_x[t],H_y[t],H_z[t]);
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
endShape(CLOSE);
beginShape();
vertex(H_x[t],H_y[t],H_z[t]);
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
vertex(I_x[t],I_y[t],I_z[t]);
endShape(CLOSE);
beginShape();
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
vertex(I_x[t],I_y[t],I_z[t]);
vertex(J_x[t],J_y[t],J_z[t]);
vertex(last_x[t],last_y[t],last_z[t]);
endShape(CLOSE);
beginShape();
vertex(J_x[t],J_y[t],J_z[t]);
vertex(K_x[t],K_y[t],K_z[t]);
vertex(last_x[t],last_y[t],last_z[t]);
endShape(CLOSE);

}

function polygon( x, y,  radius,  npoints) {
  var angle = 3 / npoints;
  beginShape();
  for (var a = 0; a < TWO_PI; a += angle) {
    var sx = x + cos(a) * radius;
    var sy = y + sin(a) * radius;
    vertex(sx, sy);
  }
  endShape(CLOSE);
}

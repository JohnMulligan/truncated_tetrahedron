

function setup() {
  createCanvas(1000, 800, WEBGL);
  fill(204);
  
  
  
}

function draw() {

  background(0);

let A_x=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let A_y=[1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0];
let A_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let B_x=[587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732];
let B_y=[809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474];
let B_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let C_x=[951.056516295153, 941.814706920499, 914.559511644446, 870.67770307562, 812.402033154485, 742.697628418478, 665.1111212879322, 583.5901937294599, 502.2827151023877, 425.325694262993];
let C_y=[309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947];
let C_z=[0.0, -81.4196321895832, -158.696549033287, -227.898820839445, -285.505364232078, -328.585098525633, -354.946082150799, -363.24704091535, -353.065613426404, -324.919841276231];
let D_x=[951.056516295154, 916.7913563896467, 818.8007968971859, 670.639961193562, 492.202610087155, 306.226334448045, 134.3911659391342, -6.23842518047408, -105.7538344054213, -162.459703072703];
let D_y=[-309.016994374943, -294.795312091901, -252.853879190099, -185.326719283224, -95.649684316156, 11.614365146149, 131.007722997453, 256.4555313384356, 381.5748755483186, 499.999553602047];
let D_z=[0.0, -210.8435161426382, -397.647174140869, -540.269123268268, -625.627724382891, -649.537582419547, -616.890808282712, -540.180656060578, -436.6892918456655, -324.9201313633336];
let E_x=[587.785252292473, 522.9850183721097, 347.8418978177439, 113.565091656699, -113.867541311407, -275.018661680436, -334.5978326060198, -289.3423618050801, -164.2649053086101, -0.000669815628];
let E_y=[-809.016994374943, -754.609693218417, -598.867212724859, -362.900630242515, -77.7288431474126, 221.120021379918, 499.639630251153, 730.8534241638256, 898.7602277641316, 999.999724110497];
let E_z=[0.0, -335.1548764302862, -598.74043520187, -740.521731558934, -745.30991305621, -634.4496491028113, -455.255888020358, -263.116021723054, -103.4299674670755, -0.000290087354600267];
let F_x=[0.0, -77.9824937538733, -265.5258556571201, -449.953751930908, -515.679106952073, -406.290780589668, -149.9845141818658, 162.58946146238193, 429.9132824921809, 587.784872562837];
let F_y=[-1000.000000000003, -881.71401585515, -557.991299966098, -111.949208240385, 348.2869223133744, 723.161756459121, 949.693555295329, 1014.4888526850036, 948.6978259922515, 809.017611281507];
let F_z=[0.0, -403.3351652700104, -662.5774934318182, -702.6283552656183, -547.764868708459, -298.7597054258474, -74.02708734698, 48.772711731466, 59.1262648806265, 0.000290086856934956];
let G_x=[-587.785252292477, -642.2298465049803, -756.1462938752551, -814.395867410845, -713.9024724367, -435.3047177160278, -61.4945168521145, 268.83989070629895, 441.1591557944435, 425.325783903672];
let G_y=[-809.016994374943, -690.57515942668, -373.555382499337, 41.059368682813, 426.366707082903, 675.5864860726123, 739.873990400899, 642.8701157096466, 465.7740946356975, 309.017458772949];
let G_z=[0.0, -238.8454278190434, -335.1007931905032, -227.5111790842523, 32.387745554722, 316.7569851278616, 500.526027525963, 531.034437213002, 444.6443724663035, 324.9201313639699];
let H_x=[-951.056516295157, -938.1846360326894, -881.5095406453592, -750.4008625642628, -548.234276946047, -332.3725790129298, -180.8035840629575, -131.33852389061607, -150.3554441155735, -162.459903520324];
let H_y=[-309.016994374943, -259.638302694026, -136.724703404434, -0.1703212293769, 93.367339920995, 127.0745937313013, 134.976467336571, 178.2233115057946, 301.4558904344175, 499.99912520238];
let H_z=[0.0, 90.8062054471936, 221.8204732815268, 385.8164358773867, 525.978144289092, 582.2860608093276, 543.3085510843305, 454.050055134897, 373.3981998570429, 324.91984128005987];
let I_x=[-951.056516295157, -844.3842418971326, -579.649515704693, -298.2437736402838, -152.650494770948, -202.8174860718138, -357.3418301470805, -432.5114318402031, -301.7016976365175, -0.001339636659];
let I_y=[309.016994374947, 234.236027954957, 35.437170064458, -209.6905144017589, -381.414380703481, -361.1207934142157, -101.608996546434, 323.5177303908826, 745.4608142265445, 999.999448220463];
let I_z=[0.0, 450.3276134831156, 732.9044447740788, 751.3588641109667, 533.839460401121, 226.1305426533316, 0.3282777788425, -65.709911203532, -28.9945814445361, 4.166877408e-09];
let J_x=[-587.785252292477, -399.3252253067826, 0.2267125634169, 257.5118902190032, 152.940019684752, -179.2039321457002, -368.3152617374679, -179.03100892697407, 253.9665044564605, 587.784492828611];
let J_y=[809.016994374947, 588.357176747002, 57.8319595489245, -455.6403977103899, -614.022177559685, -289.4641292404738, 328.692108470094, 858.9358386884606, 1014.9416951423215, 809.018228190507];
let J_z=[0.0, 692.1678396241496, 945.5262793621558, 639.0632353496087, 49.61424258765496, -387.2810107107854, -443.1653006084855, -241.894858792357, -53.0552392434722, 4.5213156373677e-10];
let K_x=[0.0, 214.3360205381444, 571.4908234262979, 567.1032129665322, 121.4060244407774, -285.6939840361242, -199.8752386714459, 245.6094088516369, 536.9229099508304, 425.326453717718];
let K_y=[999.999999999997, 657.3905040430172, -80.6099056459125, -583.2322578100099, -416.345978468941, 268.7234287530482, 882.833141426624, 974.4376571976186, 634.7633850697935, 309.017734659736];
let K_z=[0.0, 717.0733876124925, 754.5886538099148, 119.6024174182987, -535.1042697814261, -630.2882743876484, -227.4764379532965, 192.047368652714, 343.6387692696328, 324.91984127811713];
let first_x=[-224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276];
let first_y=[690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522];
let first_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let B_C_x=[587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473];
let B_C_y=[427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176];
let B_C_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let D_E_x=[587.785252292473, 553.203832371236, 455.449963230763, 311.339892044244, 145.280532791524, -15.403240861024, -145.6516874917458, -227.3378515036541, -252.5005927251173, -224.514188734604];
let D_E_y=[-427.050983124843, -407.397101586882, -349.435466853463, -256.11522702591, -132.184612711734, 16.050657874222, 181.048220393747, 354.4128277068039, 527.323508754767, 690.982388718257];
let D_E_z=[0.0, -178.8594086671015, -330.221642265648, -431.685140880553, -470.037541394593, -443.545423967688, -361.9987083405225, -244.516242378313, -115.565081311128, -0.000400890515];
let F_G_x=[-224.513988289796, -277.3128432524153, -392.2034244683211, -467.423996492782, -410.00939385107, -196.8168474183651, 109.4776437945332, 397.2165676542699, 568.6334674417619, 587.785452736641];
let F_G_y=[-690.983005625053, -583.050955353813, -292.946344742027, 90.691108655914, 456.5546954117784, 709.855271982717, 803.007448034494, 746.3873495094164, 596.3355721894886, 427.051600031858];
let F_G_z=[0.0, -273.0822504808154, -418.44228699762, -379.31778279167, -197.037004415099, 20.3666685123456, 164.846536699732, 186.503386547678, 109.0821067102715, 0.000400890532929431];
let H_I_x=[-726.542528005357, -686.3123032463817, -565.4511705645591, -378.985074905017, -181.061578537838, -54.5681302654028, -55.403431924823, -155.81639975463008, -248.8196047920925, -224.514389183859];
let H_I_y=[-3e-12, 12.489133645663, 34.345604188409, 33.71307854287899, -3.639111773772, -48.1695199994697, -32.940369129793, 104.2612588637036, 369.2533989536789, 690.981771809649];
let H_I_z=[0.0, 182.4851022462066, 351.2039742090878, 468.2801348464117, 485.088150115168, 387.3188261027982, 223.970530132905, 80.113587118662, 10.6223177326045, 4.425934956e-09];
let last_x=[-224.513988289796, -71.2558693181256, 235.9180676338739, 389.0503631082502, 241.254125800386, -21.9350013347038, -70.5683414094955, 194.48492922876292, 519.0949640328615, 587.78565317749];
let last_y=[690.983005625057, 501.872525141095, 65.2944420850549, -306.181300660585, -325.0951809808133, 50.8575543682183, 561.721132606407, 844.1908863387856, 741.6668170610159, 427.052216941186];
let last_z=[0.0, 516.7000749261482, 645.0401228594628, 313.0913926862627, -184.09464269322805, -460.3950915545444, -388.9225214060665, -163.3680221429753, -22.62869355385104, -7.1784810496582e-10];


let sec=floor(millis()/1000);
let steparray=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 8, 7, 6, 5, 4, 3, 2, 1];
let t=steparray[sec%18];

background(0)

let angle=((sec*5)%360);




//adapted from
//from https://discourse.processing.org/t/how-to-rotate-around-a-sphere/25072/24
//and math.fandom.com/wiki/Ellipsoid
//and Simon Greenwold.

  let latitude = (frameCount%360)*3.141/180;
  let longitude = (((frameCount-(latitude/2))/5)%360)*3.141/180;
  let radius=5000;
  
  let cam_x = radius * cos(latitude)*cos(longitude);
  let cam_y = radius * cos(latitude)*sin(longitude);
  let cam_z = radius * sin(latitude);
  camera(cam_x, cam_y, cam_z, 0, 0, 0, 0, 1, 0);

/**
 * Points and Lines. 
 * 
 * Points and lines can be used to draw basic geometry.
 * Change the value of the variable 'd' to scale the form.
 * The four variables set the positions based on the value of 'd'. 
 */




//let cam_x=350 * cos(angle);
//let cam_y=350*sin(angle);
//let cam_x=350*cos(angle);
//let cam_y=350*sin(angle);
//console.log(angle,cam_x,cam_y);

//camera(cam_x,cam_y,-900,0,0,0,0,1,0);


fill(127);

beginShape();
vertex(A_x[t],A_y[t],A_z[t]);
vertex(B_x[t],B_y[t],B_z[t]);
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(first_x[t],first_y[t],first_z[t]);
endShape(CLOSE);
beginShape();
vertex(B_x[t],B_y[t],B_z[t]);
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(C_x[t],C_y[t],C_z[t]);
endShape(CLOSE);
beginShape();
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(C_x[t],C_y[t],C_z[t]);
vertex(D_x[t],D_y[t],D_z[t]);
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
endShape(CLOSE);
beginShape();
vertex(D_x[t],D_y[t],D_z[t]);
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
vertex(E_x[t],E_y[t],E_z[t]);
endShape(CLOSE);
beginShape();
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
vertex(E_x[t],E_y[t],E_z[t]);
vertex(F_x[t],F_y[t],F_z[t]);
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
endShape(CLOSE);
beginShape();
vertex(F_x[t],F_y[t],F_z[t]);
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
vertex(G_x[t],G_y[t],G_z[t]);
endShape(CLOSE);
beginShape();
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
vertex(G_x[t],G_y[t],G_z[t]);
vertex(H_x[t],H_y[t],H_z[t]);
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
endShape(CLOSE);
beginShape();
vertex(H_x[t],H_y[t],H_z[t]);
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
vertex(I_x[t],I_y[t],I_z[t]);
endShape(CLOSE);
beginShape();
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
vertex(I_x[t],I_y[t],I_z[t]);
vertex(J_x[t],J_y[t],J_z[t]);
vertex(last_x[t],last_y[t],last_z[t]);
endShape(CLOSE);
beginShape();
vertex(J_x[t],J_y[t],J_z[t]);
vertex(K_x[t],K_y[t],K_z[t]);
vertex(last_x[t],last_y[t],last_z[t]);
endShape(CLOSE);

}

function polygon( x, y,  radius,  npoints) {
  var angle = 3 / npoints;
  beginShape();
  for (var a = 0; a < TWO_PI; a += angle) {
    var sx = x + cos(a) * radius;
    var sy = y + sin(a) * radius;
    vertex(sx, sy);
  }
  endShape(CLOSE);
}

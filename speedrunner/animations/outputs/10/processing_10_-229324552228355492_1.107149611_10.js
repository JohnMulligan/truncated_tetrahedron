

function setup() {
  createCanvas(1000, 800, WEBGL);
  fill(204);
  
  
  
}

function draw() {

  background(0);

let A_x=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let A_y=[1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0];
let A_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let B_x=[587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732];
let B_y=[809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474];
let B_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let C_x=[951.056516295153, 948.311272616262, 940.117033233915, 926.597646005606, 907.957443153609, 884.478152984692, 856.514641844247, 824.489550660995, 788.886907145622, 750.244810188668];
let C_y=[309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947];
let C_z=[0.0, -44.575777274164, -88.4778355789539, -131.04263854365, -171.626861094892, -209.617112681532, -244.439208068665, -275.566845581922, -302.529561638908, -324.919841342873];
let D_x=[951.056516295154, 940.8232938359087, 910.5541773753652, 861.5176963627148, 795.752339097107, 715.957606661912, 625.350493053049, 527.495747218916, 426.119776979171, 324.918970682525];
let D_y=[-309.016994374943, -304.792498736914, -292.182860913554, -271.378663160922, -242.694340437321, -206.563428028604, -163.532009089322, -114.250461133706, -59.463626220115, 0.000446603056];
let D_z=[0.0, -116.3242796253931, -228.6590854117029, -333.209629217411, -426.55945789929, -505.832684100974, -568.825685728672, -614.100969525635, -641.038132825479, -649.839392465357];
let E_x=[587.785252292473, 568.2447352058576, 511.3840209723182, 422.3027335413508, 308.911956734079, 181.123796163535, 49.851479347578, -74.065712585913, -180.89190610676, -262.866046816186];
let E_y=[-809.016994374943, -792.771050156792, -744.703303600083, -666.788315989783, -562.20011227772, -435.143969384394, -290.634788412942, -134.234920591881, 28.2333653999674, 190.984174846626];
let E_z=[0.0, -187.2338153269835, -362.2796169106409, -514.061596676148, -633.60659048363, -714.80575057459, -754.868100146315, -754.423607427557, -717.2750366718309, -649.8388120248386];
let F_x=[0.0, -23.96414436514337, -91.4846361504878, -190.2194185386002, -302.030132564156, -406.143678656353, -482.708405447066, -516.090717314607, -497.326690694781, -425.324699795584];
let F_y=[-1000.000000000003, -964.404512499385, -860.461326130156, -696.4137972540173, -485.0790344312942, -242.576848742809, 13.240690000458, 264.481608041395, 494.8405398757734, 690.984280274259];
let F_z=[0.0, -229.6202378188712, -433.80215691713, -590.9053037790806, -686.2194608275722, -713.8956315816479, -677.3718165150495, -588.275973561356, -464.0700148406099, -324.9186804623566];
let G_x=[-587.785252292477, -604.8469044870453, -651.3186924984288, -714.0328202584802, -774.08750584836, -810.77115209178, -805.901002945211, -747.700369716127, -633.428273868947, -470.2268732895787];
let G_y=[-809.016994374943, -773.242596526677, -669.430893795182, -507.7299919948553, -303.8072746315452, -77.122625223266, 151.217668158756, 360.7858326802315, 534.0698975688053, 658.3599181080356];
let G_z=[0.0, -140.1867310951395, -254.751285584366, -322.6070498494676, -330.8768139679332, -277.01175809702585, -168.9675387293396, -23.43221066646, 137.5140838543171, 290.61804229174845];
let H_x=[-951.056516295157, -947.6182008994754, -935.4319241647528, -909.6276313074482, -864.3340955499453, -795.2936266820465, -702.238385232078, -590.208036568752, -469.281259794771, -352.6703536973007];
let H_y=[-309.016994374943, -293.917782146083, -251.010802447783, -187.0111878087723, -111.6693323092012, -35.8819391613109, 30.446472796254, 80.3791328340125, 111.3575205114524, 125.7354796544586];
let H_z=[0.0, 46.1505220907415, 100.453317425027, 168.1557541427244, 249.5580018533448, 339.45045750943814, 428.2212013769004, 504.331239120712, 557.437904687541, 581.2340836822134];
let I_x=[-951.056516295157, -918.4549770476461, -825.7371331864488, -687.5695573239112, -526.3279850959773, -368.7944464248495, -241.478857736623, -165.118907645632, -149.511109166325, -190.2117656132177];
let I_y=[309.016994374947, 286.434332025155, 220.889215271837, 119.0962917793197, -7.5415674168032, -143.0578416444739, -267.801613160034, -360.4049811758575, -400.8562358148106, -374.2641208895014];
let I_z=[0.0, 256.6426625654855, 484.176443335556, 656.9854115583164, 756.3866604001988, 773.7058966428582, 712.3246126476214, 587.8453610283912, 425.7180130717431, 256.31314273855645];
let J_x=[-587.785252292477, -528.7429930453571, -367.8272348310948, -149.3930257678972, 65.9890551403837, 218.4254738732805, 266.315914522463, 199.611146134902, 44.141412814579, -145.3098422303942];
let J_y=[809.016994374947, 741.235573866817, 550.131336129019, 270.6270443696937, -45.0093064031874, -335.7516738275529, -542.824721160814, -621.5019719116175, -551.2737897857656, -341.6388363771745];
let J_z=[0.0, 409.1104007739105, 736.929607691155, 920.3681428674334, 928.7893971272817, 770.9017044647234, 492.1592870805874, 162.6790870271772, -141.5907841788669, -359.22354937421153];
let K_x=[0.0, 69.36834588865283, 247.9747208301362, 458.8246871610538, 607.8039717426817, 621.7425334011305, 479.432557911278, 222.5932246598178, -58.945653465642, -262.8665470383652];
let K_y=[999.999999999997, 892.924715396384, 599.8712488771812, 198.2947435034597, -204.7912266839424, -500.8766005988769, -609.5499059999833, -501.4757518218605, -207.3663338429486, 190.9860195379835];
let K_z=[0.0, 444.0280443182197, 753.6599314689752, 837.874123805648, 678.0458122666778, 332.68358605486236, -84.1176058007646, -443.1521946080168, -644.6481663558799, -649.8387507421686];
let first_x=[-224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276];
let first_y=[690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522];
let first_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let B_C_x=[587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473];
let B_C_y=[427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176];
let B_C_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let D_E_x=[587.785252292473, 577.437120125061, 546.930390300469, 497.846973872127, 432.721612197605, 354.895585077089, 268.324255643473, 177.349910383622, 86.453408403691, -0.000601611441];
let D_E_y=[-427.050983124843, -421.212873738413, -403.786782852355, -375.036088666891, -335.395329607147, -285.463636702844, -225.995678312892, -157.890254056438, -82.176710341885, 0.000617190241];
let D_E_z=[0.0, -99.1539916074976, -193.7257226834199, -279.387909707857, -352.308183943407, -409.3598517047, -448.291086635275, -467.842652938545, -467.807339896681, -449.027776041916];
let F_G_x=[-224.513988289796, -240.97542300257138, -286.2136030912408, -348.6378214401242, -411.579590054674, -456.688104636679, -467.655404097984, -433.513622274097, -350.848708674195, -224.5129382624418];
let F_G_y=[-690.983005625053, -658.404485089044, -563.760435518428, -415.977496840981, -228.816621272409, -19.342421091863, 193.949904506789, 393.122436638382, 562.6585453891264, 690.983768512696];
let F_G_z=[0.0, -157.7305868297719, -292.5674420106598, -385.583301102559, -425.017382513034, -408.102098190255, -341.193856658658, -238.23227008582, -117.8866058480849, 0.000802148353449572];
let H_I_x=[-726.542528005357, -714.6737042766694, -678.8484326005158, -618.943202286698, -536.297309653475, -435.298690582176, -324.397189781218, -215.864570831945, -124.003114375502, -62.0538237850547];
let H_I_y=[-3e-12, 4.006116733708, 14.481909147844, 27.2449897129537, 36.7114844886028, 37.6508053264, 27.048217377762, 5.6099081240945, -21.5155922388646, -45.0851021913194];
let H_I_z=[0.0, 99.7811637028205, 198.313246387905, 292.6342136004474, 377.1238046981818, 443.82773099781815, 484.1006844694364, 491.118879500151, 462.4338418577091, 401.62229367404143];
let last_x=[-224.513988289796, -176.10498820865718, -46.0325168584398, 124.7984723761738, 282.2647078374317, 376.2192803988295, 377.357926171342, 288.179966774189, 143.618088994992, -0.0008918302417];
let last_y=[690.983005625057, 632.525974833224, 469.483329644374, 236.6553394519977, -15.06765730898399, -228.6455213281519, -353.0243701876633, -355.2172587123928, -229.3875393220716, 0.0019321120766];
let last_z=[0.0, 310.4863957190441, 547.609528763263, 656.6201962198681, 615.3785271015148, 439.95243271864217, 179.8396876799654, -96.4464602994018, -321.5676338258209, -449.02849350311556];


let sec=floor(millis()/1000);
let steparray=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 8, 7, 6, 5, 4, 3, 2, 1];
let t=steparray[sec%18];

background(0)

let angle=((sec*5)%360);




//adapted from
//from https://discourse.processing.org/t/how-to-rotate-around-a-sphere/25072/24
//and math.fandom.com/wiki/Ellipsoid
//and Simon Greenwold.

  let latitude = (frameCount%360)*3.141/180;
  let longitude = (((frameCount-(latitude/2))/5)%360)*3.141/180;
  let radius=5000;
  
  let cam_x = radius * cos(latitude)*cos(longitude);
  let cam_y = radius * cos(latitude)*sin(longitude);
  let cam_z = radius * sin(latitude);
  camera(cam_x, cam_y, cam_z, 0, 0, 0, 0, 1, 0);

/**
 * Points and Lines. 
 * 
 * Points and lines can be used to draw basic geometry.
 * Change the value of the variable 'd' to scale the form.
 * The four variables set the positions based on the value of 'd'. 
 */




//let cam_x=350 * cos(angle);
//let cam_y=350*sin(angle);
//let cam_x=350*cos(angle);
//let cam_y=350*sin(angle);
//console.log(angle,cam_x,cam_y);

//camera(cam_x,cam_y,-900,0,0,0,0,1,0);


fill(127);

beginShape();
vertex(A_x[t],A_y[t],A_z[t]);
vertex(B_x[t],B_y[t],B_z[t]);
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(first_x[t],first_y[t],first_z[t]);
endShape(CLOSE);
beginShape();
vertex(B_x[t],B_y[t],B_z[t]);
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(C_x[t],C_y[t],C_z[t]);
endShape(CLOSE);
beginShape();
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(C_x[t],C_y[t],C_z[t]);
vertex(D_x[t],D_y[t],D_z[t]);
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
endShape(CLOSE);
beginShape();
vertex(D_x[t],D_y[t],D_z[t]);
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
vertex(E_x[t],E_y[t],E_z[t]);
endShape(CLOSE);
beginShape();
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
vertex(E_x[t],E_y[t],E_z[t]);
vertex(F_x[t],F_y[t],F_z[t]);
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
endShape(CLOSE);
beginShape();
vertex(F_x[t],F_y[t],F_z[t]);
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
vertex(G_x[t],G_y[t],G_z[t]);
endShape(CLOSE);
beginShape();
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
vertex(G_x[t],G_y[t],G_z[t]);
vertex(H_x[t],H_y[t],H_z[t]);
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
endShape(CLOSE);
beginShape();
vertex(H_x[t],H_y[t],H_z[t]);
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
vertex(I_x[t],I_y[t],I_z[t]);
endShape(CLOSE);
beginShape();
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
vertex(I_x[t],I_y[t],I_z[t]);
vertex(J_x[t],J_y[t],J_z[t]);
vertex(last_x[t],last_y[t],last_z[t]);
endShape(CLOSE);
beginShape();
vertex(J_x[t],J_y[t],J_z[t]);
vertex(K_x[t],K_y[t],K_z[t]);
vertex(last_x[t],last_y[t],last_z[t]);
endShape(CLOSE);

}

function polygon( x, y,  radius,  npoints) {
  var angle = 3 / npoints;
  beginShape();
  for (var a = 0; a < TWO_PI; a += angle) {
    var sx = x + cos(a) * radius;
    var sy = y + sin(a) * radius;
    vertex(sx, sy);
  }
  endShape(CLOSE);
}

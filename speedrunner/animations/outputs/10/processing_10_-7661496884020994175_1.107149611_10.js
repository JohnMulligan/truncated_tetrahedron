

function setup() {
  createCanvas(1000, 800, WEBGL);
  fill(204);
  
  
  
}

function draw() {

  background(0);

let A_x=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let A_y=[1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0];
let A_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let B_x=[587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732];
let B_y=[809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474];
let B_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let C_x=[951.056516295153, 948.311272616262, 940.117033233915, 926.597646005606, 907.957443153609, 884.478152984692, 856.514641844247, 824.489550660995, 788.886907145622, 750.244810188668];
let C_y=[309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947];
let C_z=[0.0, -44.575777274164, -88.4778355789539, -131.04263854365, -171.626861094892, -209.617112681532, -244.439208068665, -275.566845581922, -302.529561638908, -324.919841342873];
let D_x=[951.056516295154, 940.8232938359087, 910.5541773753652, 861.5176963627148, 795.752339097107, 715.957606661912, 625.350493053049, 527.495747218916, 426.119776979171, 324.918970682525];
let D_y=[-309.016994374943, -304.792498736914, -292.182860913554, -271.378663160922, -242.694340437321, -206.563428028604, -163.532009089322, -114.250461133706, -59.463626220115, 0.000446603056];
let D_z=[0.0, -116.3242796253931, -228.6590854117029, -333.209629217411, -426.55945789929, -505.832684100974, -568.825685728672, -614.100969525635, -641.038132825479, -649.839392465357];
let E_x=[587.785252292473, 575.7466086950826, 540.2679368122552, 483.2311398129948, 407.673848232586, 317.643675460603, 217.999660316869, 114.16710628548, 11.854616874, -83.255016614597];
let E_y=[-809.016994374943, -803.175116807082, -785.69295795763, -756.702981749073, -716.432575804417, -665.213308722394, -603.492606550646, -531.846666911619, -450.993230526129, -361.802723405161];
let E_z=[0.0, -99.0097994941554, -192.5772975501066, -275.541629678586, -343.2937354818912, -392.024466468692, -418.93911861633677, -422.427145663021, -402.176337376483, -359.221991891881];
let F_x=[0.0, -11.18794489911237, -44.1027530046648, -96.8541073262272, -166.468493898185, -249.115496384003, -340.357653873391, -435.380553883956, -529.173803020834, -616.656391094846];
let F_y=[-1000.000000000003, -991.579104774368, -966.775020412572, -926.915733097114, -874.061164399241, -810.79331315465, -739.960170989079, -664.405122346742, -586.714923833517, -509.016434289345];
let F_z=[0.0, -143.4820196468886, -280.2482436501098, -403.973465996795, -509.0640895272052, -590.912662924961, -646.0508197604968, -672.210324330152, -668.322692004878, -634.49841347643];
let G_x=[-587.785252292477, -590.8323117225053, -599.6734022279438, -613.4983156917611, -631.214539245559, -651.70417183305, -673.982722085973, -697.171720298581, -720.280086280667, -741.883301840598];
let G_y=[-809.016994374943, -796.448719200566, -760.165135959841, -704.188383684532, -634.462650313123, -557.866446428994, -481.100767942455, -409.657101325208, -347.048020916459, -294.426843673117];
let G_z=[0.0, -232.3783181403179, -455.2328733127038, -659.780621948508, -838.5632194680873, -985.775132322379, -1097.3291535685817, -1170.743013552223, -1204.982896785207, -1200.391989755877];
let H_x=[-951.056516295157, -936.8846348374743, -895.5298050936378, -830.4697061102232, -747.400712355055, -653.8538692100004, -558.367231483029, -469.234749510978, -393.08569483783, -333.708726252665];
let H_y=[-309.016994374943, -293.965790062426, -251.737454787351, -190.361382258002, -120.937140940415, -54.868694008323, -1.110203953669, 35.859532880658, 56.843501572758, 67.376266154554];
let H_z=[0.0, -330.9922463735671, -644.8015762967358, -925.997149600364, -1162.2271433950252, -1344.877695820669, -1469.0926914047589, -1533.407703374864, -1539.320270585686, -1491.00863899116];
let I_x=[-951.056516295157, -914.2408956408875, -808.70389915382, -648.5596999150102, -455.236293418645, -254.30298885671448, -71.313005747218, 72.577195735056, 164.127309853002, 199.692395496988];
let I_y=[309.016994374947, 319.692808591244, 347.18805083766, 379.621639242182, 402.249323936087, 403.004071748081, 377.008599534508, 328.42910786651, 269.101830198457, 214.589462201105];
let I_z=[0.0, -400.8234473063358, -770.1631015732528, -1080.897492071511, -1313.494742462672, -1457.472702981703, -1511.1683719298505, -1480.4089200737392, -1376.759264860007, -1215.731452366609];
let J_x=[-587.785252292477, -531.7415496283916, -375.283507150506, -150.9453147076112, 94.927600533296, 312.4627879087725, 459.423641525707, 510.256699377721, 460.413734772833, 324.918465221543];
let J_y=[809.016994374947, 804.945553416879, 787.677410705414, 745.140120114144, 665.859067477743, 547.038621275, 398.8058942516468, 242.334466358157, 102.711936165953, -0.000583071639];
let J_z=[0.0, -414.6087724500567, -779.2129020733104, -1053.6546026167703, -1214.5219979739036, -1257.481167960574, -1195.2419557589105, -1052.6351760866212, -860.527951568983, -649.837862386001];
let K_x=[0.0, 61.27992006028343, 224.586999140601, 434.8429175589908, 619.970402299035, 713.8238477969176, 676.69092351456, 506.134428014245, 234.723685452897, -83.25669865625];
let K_y=[999.999999999997, 972.342492817522, 886.6481476844359, 739.0634128851816, 534.235531826316, 292.704945655171, 49.6134962762168, -156.00245512298, -295.724579423356, -361.803632717673];
let K_z=[0.0, -366.9662240539156, -668.1895704984454, -856.7250928491713, -916.2414045275546, -862.272751677124, -733.9116959412225, -580.1135203777621, -445.46367229031, -359.221964489602];
let first_x=[-224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276];
let first_y=[690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522];
let first_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let B_C_x=[587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473];
let B_C_y=[427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176];
let B_C_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let D_E_x=[587.785252292473, 577.437120125061, 546.930390300469, 497.846973872127, 432.721612197605, 354.895585077089, 268.324255643473, 177.349910383622, 86.453408403691, -0.000601611441];
let D_E_y=[-427.050983124843, -421.212873738413, -403.786782852355, -375.036088666891, -335.395329607147, -285.463636702844, -225.995678312892, -157.890254056438, -82.176710341885, 0.000617190241];
let D_E_z=[0.0, -99.1539916074976, -193.7257226834199, -279.387909707857, -352.308183943407, -409.3598517047, -448.291086635275, -467.842652938545, -467.807339896681, -449.027776041916];
let F_G_x=[-224.513988289796, -233.68648377037138, -260.6500409972908, -303.8111213018912, -360.723590246645, -428.346326976413, -503.30657470036, -582.106277532566, -661.229479011317, -737.143171497231];
let F_G_y=[-690.983005625053, -681.580781493168, -654.036038412141, -610.264325711236, -553.232681446507, -486.650254745851, -414.589214004877, -341.081533971584, -269.739477481997, -203.44372764169];
let F_G_z=[0.0, -160.613088303407, -314.8839903677646, -456.876342262058, -581.3971789069242, -684.2165792461, -762.1517383736948, -813.034516038535, -835.61255601124, -829.450434370317];
let H_I_x=[-726.542528005357, -711.9190324293844, -669.5135339683939, -603.6582082738852, -521.288932461182, -431.31713568583, -343.529896313089, -267.105131196785, -209.057950965654, -173.059781378263];
let H_I_y=[-3e-12, 12.83354780914, 48.593736146943, 99.827125922787, 156.442118416472, 208.475542834707, 248.741431148401, 274.607311947473, 288.424878830154, 296.555872904723];
let H_I_z=[0.0, -296.8941853576105, -576.8614946884599, -824.778535109947, -1028.6897208417843, -1180.484116553524, -1275.9163118853758, -1314.22479085399, -1297.6554428941215, -1231.0727659168872];
let last_x=[-224.513988289796, -183.31793691472257, -70.541283637103, 84.0279587918378, 239.018869597422, 351.9339041438345, 389.930111142928, 337.753066658204, 200.3998178683833, -0.001609296406];
let last_y=[690.983005625057, 683.436348023982, 657.33505980151, 604.961242971591, 520.74182422542, 407.5263947266234, 278.8645515846839, 155.627443632167, 58.479700661723, -0.000276014821];
let last_z=[0.0, -315.9450361602652, -589.3680113881308, -787.129787835258, -891.9127519181721, -904.102612616611, -839.3167426810795, -723.0560161585801, -584.241313982915, -449.027058579479];


let sec=floor(millis()/1000);
let steparray=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 8, 7, 6, 5, 4, 3, 2, 1];
let t=steparray[sec%18];

background(0)

let angle=((sec*5)%360);




//adapted from
//from https://discourse.processing.org/t/how-to-rotate-around-a-sphere/25072/24
//and math.fandom.com/wiki/Ellipsoid
//and Simon Greenwold.

  let latitude = (frameCount%360)*3.141/180;
  let longitude = (((frameCount-(latitude/2))/5)%360)*3.141/180;
  let radius=5000;
  
  let cam_x = radius * cos(latitude)*cos(longitude);
  let cam_y = radius * cos(latitude)*sin(longitude);
  let cam_z = radius * sin(latitude);
  camera(cam_x, cam_y, cam_z, 0, 0, 0, 0, 1, 0);

/**
 * Points and Lines. 
 * 
 * Points and lines can be used to draw basic geometry.
 * Change the value of the variable 'd' to scale the form.
 * The four variables set the positions based on the value of 'd'. 
 */




//let cam_x=350 * cos(angle);
//let cam_y=350*sin(angle);
//let cam_x=350*cos(angle);
//let cam_y=350*sin(angle);
//console.log(angle,cam_x,cam_y);

//camera(cam_x,cam_y,-900,0,0,0,0,1,0);


fill(127);

beginShape();
vertex(A_x[t],A_y[t],A_z[t]);
vertex(B_x[t],B_y[t],B_z[t]);
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(first_x[t],first_y[t],first_z[t]);
endShape(CLOSE);
beginShape();
vertex(B_x[t],B_y[t],B_z[t]);
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(C_x[t],C_y[t],C_z[t]);
endShape(CLOSE);
beginShape();
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(C_x[t],C_y[t],C_z[t]);
vertex(D_x[t],D_y[t],D_z[t]);
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
endShape(CLOSE);
beginShape();
vertex(D_x[t],D_y[t],D_z[t]);
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
vertex(E_x[t],E_y[t],E_z[t]);
endShape(CLOSE);
beginShape();
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
vertex(E_x[t],E_y[t],E_z[t]);
vertex(F_x[t],F_y[t],F_z[t]);
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
endShape(CLOSE);
beginShape();
vertex(F_x[t],F_y[t],F_z[t]);
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
vertex(G_x[t],G_y[t],G_z[t]);
endShape(CLOSE);
beginShape();
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
vertex(G_x[t],G_y[t],G_z[t]);
vertex(H_x[t],H_y[t],H_z[t]);
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
endShape(CLOSE);
beginShape();
vertex(H_x[t],H_y[t],H_z[t]);
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
vertex(I_x[t],I_y[t],I_z[t]);
endShape(CLOSE);
beginShape();
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
vertex(I_x[t],I_y[t],I_z[t]);
vertex(J_x[t],J_y[t],J_z[t]);
vertex(last_x[t],last_y[t],last_z[t]);
endShape(CLOSE);
beginShape();
vertex(J_x[t],J_y[t],J_z[t]);
vertex(K_x[t],K_y[t],K_z[t]);
vertex(last_x[t],last_y[t],last_z[t]);
endShape(CLOSE);

}

function polygon( x, y,  radius,  npoints) {
  var angle = 3 / npoints;
  beginShape();
  for (var a = 0; a < TWO_PI; a += angle) {
    var sx = x + cos(a) * radius;
    var sy = y + sin(a) * radius;
    vertex(sx, sy);
  }
  endShape(CLOSE);
}

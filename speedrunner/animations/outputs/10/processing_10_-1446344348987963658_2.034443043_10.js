

function setup() {
  createCanvas(1000, 800, WEBGL);
  fill(204);
  
  
  
}

function draw() {

  background(0);

let A_x=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let A_y=[1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0];
let A_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let B_x=[587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732];
let B_y=[809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474];
let B_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let C_x=[951.056516295153, 941.814706920499, 914.559511644446, 870.67770307562, 812.402033154485, 742.697628418478, 665.1111212879322, 583.5901937294599, 502.2827151023877, 425.325694262993];
let C_y=[309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947];
let C_z=[0.0, -81.4196321895832, -158.696549033287, -227.898820839445, -285.505364232078, -328.585098525633, -354.946082150799, -363.24704091535, -353.065613426404, -324.919841276231];
let D_x=[951.056516295154, 916.7913563896467, 818.8007968971859, 670.639961193562, 492.202610087155, 306.226334448045, 134.3911659391342, -6.23842518047408, -105.7538344054213, -162.459703072703];
let D_y=[-309.016994374943, -294.795312091901, -252.853879190099, -185.326719283224, -95.649684316156, 11.614365146149, 131.007722997453, 256.4555313384356, 381.5748755483186, 499.999553602047];
let D_z=[0.0, -210.8435161426382, -397.647174140869, -540.269123268268, -625.627724382891, -649.537582419547, -616.890808282712, -540.180656060578, -436.6892918456655, -324.9201313633336];
let E_x=[587.785252292473, 547.5622487360567, 434.0241970761789, 267.430426461949, 77.869497329524, -99.86584913534, -232.5779416797118, -295.1390170300111, -275.8805616935713, -179.6117000908944];
let E_y=[-809.016994374943, -789.320407316726, -730.735462429325, -634.850861468721, -504.538091114331, -344.208640297277, -160.035406393434, 39.9625655666826, 246.0564598231686, 447.2128260854639];
let E_z=[0.0, -177.9678792009653, -323.2014094456197, -408.678363926984, -418.011844188891, -348.796600044686, -213.661863218134, -38.550059854124, 141.8067469581245, 290.6165301333534];
let F_x=[0.0, -14.3375284349903, -49.5781997702071, -85.192366898657, -95.525855234769, -60.0537329420217, 27.3244804493432, 153.96931960391092, 291.8614301109257, 408.1736819315806];
let F_y=[-1000.000000000003, -971.600555642855, -888.414596334604, -756.648959015739, -586.9799132829723, -394.3636998866717, -196.8114690557278, -12.9273000325111, 141.4010081543096, 256.2302197305919];
let F_z=[0.0, 3.7148089986437, 27.8427811421523, 84.057265276544, 169.443182955077, 265.911035056664, 345.859596099218, 382.722269326087, 362.4473561576785, 290.6173697690783];
let G_x=[-587.785252292477, -538.2990383034663, -392.9654808520531, -165.306476403665, 112.241483489238, 384.9257819252673, 586.0975611479442, 661.625613887425, 596.4579894708747, 425.3262037221507];
let G_y=[-809.016994374943, -766.826275172085, -647.951708351208, -474.067798043903, -276.3043971831843, -87.5307156806377, 67.0914941332752, 177.8035973093799, 252.1317541026016, 309.0167767386854];
let G_z=[0.0, 259.6402697955807, 481.9669777492053, 627.836290407289, 661.662105697576, 565.598809918782, 355.5488456452317, 86.288764263659, -163.7898994390085, -324.9192917268567];
let H_x=[-951.056516295157, -934.4122872802913, -852.9606076747381, -634.531164854529, -227.455157974256, 325.6935517787579, 855.1612476695432, 1125.925286775279, 988.5809606064137, 518.0629752157508];
let H_y=[-309.016994374943, -292.440720802216, -241.172635432625, -156.977656376003, -58.3368748623393, 13.6668075118063, 11.1364009518997, -83.6979209491151, -223.8263277177654, -299.9999919482176];
let H_z=[0.0, 255.32158477240475, 551.9761227588698, 875.319714206387, 1129.703089204187, 1172.407359184267, 909.1188695740727, 399.352305665145, -122.9304928376868, -374.5628000760307];
let I_x=[-951.056516295157, -1040.1086841003532, -1202.1915578668961, -1197.561488034975, -839.902891200257, -177.1423037363461, 494.9530116675552, 844.4242267581969, 776.8588245606556, 500.9105362201989];
let I_y=[309.016994374947, 256.863828201579, 130.854882624201, -4.93812433521, -109.3478192389387, -194.3193434742637, -294.0605567228303, -401.8033149279321, -447.2878638127854, -352.7870926839788];
let I_z=[0.0, -7.46881724617226, 203.2652389504278, 670.754694894082, 1195.061094607155, 1465.432741457696, 1307.9557472477939, 848.275598423421, 412.9843233825462, 240.9738170983693];
let J_x=[-587.785252292477, -812.0094365187123, -1268.0361822150264, -1500.056248068562, -1229.814847649173, -609.0656906358881, -39.9387892489358, 243.00850169129393, 334.5894128043177, 408.173749412963];
let J_y=[809.016994374947, 655.64763474968, 284.240529974711, -113.634758613371, -388.0846473889707, -498.6717634470017, -463.3361042347703, -295.2474149793111, -24.2567024368534, 256.2296288748202];
let J_z=[0.0, -420.87929139723127, -391.8005892412232, 142.883523964168, 804.8810616721979, 1144.842966892017, 1048.7211786097628, 753.8776266311767, 499.0564743939967, 290.617874996103];
let K_x=[0.0, -343.7286143594853, -1017.9479937514924, -1351.641407876498, -1081.868981962973, -528.1201901590864, -74.4724403872925, 231.5666152961211, 441.5599285932527, 425.3261056134912];
let K_y=[999.999999999997, 740.2460857110758, 143.166971157719, -414.659706188118, -669.1327104020887, -587.9683121562985, -283.0618859946073, 74.7601790709969, 299.3998695239246, 309.0172733382168];
let K_z=[0.0, -815.2423030285522, -939.0849396879112, -376.079892278728, 274.7018293808499, 538.674703460743, 458.57319341701674, 258.9741261071417, -16.4721314355323, -324.9186978563];
let first_x=[-224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276];
let first_y=[690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522];
let first_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let B_C_x=[587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473];
let B_C_y=[427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176];
let B_C_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let D_E_x=[587.785252292473, 553.203832371236, 455.449963230763, 311.339892044244, 145.280532791524, -15.403240861024, -145.6516874917458, -227.3378515036541, -252.5005927251173, -224.514188734604];
let D_E_y=[-427.050983124843, -407.397101586882, -349.435466853463, -256.11522702591, -132.184612711734, 16.050657874222, 181.048220393747, 354.4128277068039, 527.323508754767, 690.982388718257];
let D_E_z=[0.0, -178.8594086671015, -330.221642265648, -431.685140880553, -470.037541394593, -443.545423967688, -361.9987083405225, -244.516242378313, -115.565081311128, -0.000400890515];
let F_G_x=[-224.513988289796, -223.3225614081653, -212.8721121700201, -175.972823172177, -94.345950961057, 39.615750554083, 213.5246261321902, 393.3146050934979, 532.0995431081387, 587.7852311301097];
let F_G_y=[-690.983005625053, -659.30207109922, -567.3426705939, -424.436058070805, -246.116408854313, -53.26192977054, 130.224951766861, 281.3208311091426, 382.6932316563736, 427.0509179958672];
let F_G_z=[0.0, 72.2198912573107, 154.9094975734553, 249.258751210654, 341.805339256381, 405.959634598313, 411.240931001114, 337.667798028898, 189.3527413041712, 0.000759457511399733];
let H_I_x=[-726.542528005357, -770.7376080999672, -848.569742779651, -824.425394250686, -563.795163599423, -42.2411782789287, 585.3614957666996, 1034.960972059059, 1074.0001614478667, 715.9442973273387];
let H_I_y=[-3e-12, -3.717358732032, -5.187817732594, 13.771740216714, 55.1072985495007, 86.5896077041153, 52.8969148338888, -80.0653790144031, -275.0646601991744, -414.5895566107976];
let H_I_z=[0.0, 66.2516153419847, 251.6597564534923, 591.2724312488159, 988.62207033459, 1244.548425019205, 1176.2558889176908, 770.310971607336, 245.8190524670375, -68.6048817602547];
let last_x=[-224.513988289796, -455.5122007504223, -939.5647756523091, -1242.4628711983746, -1102.640234791863, -639.144618438122, -153.8407927962538, 203.82488138525892, 462.7988665850317, 587.7852099671917];
let last_y=[690.983005625057, 547.388307754389, 206.7859335194154, -136.443313892989, -330.0975240375157, -334.0150921399157, -181.0361383633663, 67.1912530127499, 309.5500265220136, 427.0508528664272];
let last_z=[0.0, -505.06760862956725, -570.7009925637722, -138.227585295121, 449.4065265500149, 801.504253015097, 818.0025261188538, 639.85618305951, 364.7678396800475, 0.001518914931300933];


let sec=floor(millis()/1000);
let steparray=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 8, 7, 6, 5, 4, 3, 2, 1];
let t=steparray[sec%18];

background(0)

let angle=((sec*5)%360);




//adapted from
//from https://discourse.processing.org/t/how-to-rotate-around-a-sphere/25072/24
//and math.fandom.com/wiki/Ellipsoid
//and Simon Greenwold.

  let latitude = (frameCount%360)*3.141/180;
  let longitude = (((frameCount-(latitude/2))/5)%360)*3.141/180;
  let radius=5000;
  
  let cam_x = radius * cos(latitude)*cos(longitude);
  let cam_y = radius * cos(latitude)*sin(longitude);
  let cam_z = radius * sin(latitude);
  camera(cam_x, cam_y, cam_z, 0, 0, 0, 0, 1, 0);

/**
 * Points and Lines. 
 * 
 * Points and lines can be used to draw basic geometry.
 * Change the value of the variable 'd' to scale the form.
 * The four variables set the positions based on the value of 'd'. 
 */




//let cam_x=350 * cos(angle);
//let cam_y=350*sin(angle);
//let cam_x=350*cos(angle);
//let cam_y=350*sin(angle);
//console.log(angle,cam_x,cam_y);

//camera(cam_x,cam_y,-900,0,0,0,0,1,0);


fill(127);

beginShape();
vertex(A_x[t],A_y[t],A_z[t]);
vertex(B_x[t],B_y[t],B_z[t]);
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(first_x[t],first_y[t],first_z[t]);
endShape(CLOSE);
beginShape();
vertex(B_x[t],B_y[t],B_z[t]);
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(C_x[t],C_y[t],C_z[t]);
endShape(CLOSE);
beginShape();
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(C_x[t],C_y[t],C_z[t]);
vertex(D_x[t],D_y[t],D_z[t]);
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
endShape(CLOSE);
beginShape();
vertex(D_x[t],D_y[t],D_z[t]);
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
vertex(E_x[t],E_y[t],E_z[t]);
endShape(CLOSE);
beginShape();
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
vertex(E_x[t],E_y[t],E_z[t]);
vertex(F_x[t],F_y[t],F_z[t]);
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
endShape(CLOSE);
beginShape();
vertex(F_x[t],F_y[t],F_z[t]);
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
vertex(G_x[t],G_y[t],G_z[t]);
endShape(CLOSE);
beginShape();
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
vertex(G_x[t],G_y[t],G_z[t]);
vertex(H_x[t],H_y[t],H_z[t]);
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
endShape(CLOSE);
beginShape();
vertex(H_x[t],H_y[t],H_z[t]);
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
vertex(I_x[t],I_y[t],I_z[t]);
endShape(CLOSE);
beginShape();
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
vertex(I_x[t],I_y[t],I_z[t]);
vertex(J_x[t],J_y[t],J_z[t]);
vertex(last_x[t],last_y[t],last_z[t]);
endShape(CLOSE);
beginShape();
vertex(J_x[t],J_y[t],J_z[t]);
vertex(K_x[t],K_y[t],K_z[t]);
vertex(last_x[t],last_y[t],last_z[t]);
endShape(CLOSE);

}

function polygon( x, y,  radius,  npoints) {
  var angle = 3 / npoints;
  beginShape();
  for (var a = 0; a < TWO_PI; a += angle) {
    var sx = x + cos(a) * radius;
    var sy = y + sin(a) * radius;
    vertex(sx, sy);
  }
  endShape(CLOSE);
}

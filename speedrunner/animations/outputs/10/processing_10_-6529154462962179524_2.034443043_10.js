

function setup() {
  createCanvas(1000, 800, WEBGL);
  fill(204);
  
  
  
}

function draw() {

  background(0);

let A_x=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let A_y=[1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0];
let A_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let B_x=[587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732];
let B_y=[809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474];
let B_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let C_x=[951.056516295153, 941.814706920499, 914.559511644446, 870.67770307562, 812.402033154485, 742.697628418478, 665.1111212879322, 583.5901937294599, 502.2827151023877, 425.325694262993];
let C_y=[309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947];
let C_z=[0.0, -81.4196321895832, -158.696549033287, -227.898820839445, -285.505364232078, -328.585098525633, -354.946082150799, -363.24704091535, -353.065613426404, -324.919841276231];
let D_x=[951.056516295154, 916.7913563896467, 818.8007968971859, 670.639961193562, 492.202610087155, 306.226334448045, 134.3911659391342, -6.23842518047408, -105.7538344054213, -162.459703072703];
let D_y=[-309.016994374943, -294.795312091901, -252.853879190099, -185.326719283224, -95.649684316156, 11.614365146149, 131.007722997453, 256.4555313384356, 381.5748755483186, 499.999553602047];
let D_z=[0.0, -210.8435161426382, -397.647174140869, -540.269123268268, -625.627724382891, -649.537582419547, -616.890808282712, -540.180656060578, -436.6892918456655, -324.9201313633336];
let E_x=[587.785252292473, 547.5622487360567, 434.0241970761789, 267.430426461949, 77.869497329524, -99.86584913534, -232.5779416797118, -295.1390170300111, -275.8805616935713, -179.6117000908944];
let E_y=[-809.016994374943, -789.320407316726, -730.735462429325, -634.850861468721, -504.538091114331, -344.208640297277, -160.035406393434, 39.9625655666826, 246.0564598231686, 447.2128260854639];
let E_z=[0.0, -177.9678792009653, -323.2014094456197, -408.678363926984, -418.011844188891, -348.796600044686, -213.661863218134, -38.550059854124, 141.8067469581245, 290.6165301333534];
let F_x=[0.0, -14.3375284349903, -49.5781997702071, -85.192366898657, -95.525855234769, -60.0537329420217, 27.3244804493432, 153.96931960391092, 291.8614301109257, 408.1736819315806];
let F_y=[-1000.000000000003, -971.600555642855, -888.414596334604, -756.648959015739, -586.9799132829723, -394.3636998866717, -196.8114690557278, -12.9273000325111, 141.4010081543096, 256.2302197305919];
let F_z=[0.0, 3.7148089986437, 27.8427811421523, 84.057265276544, 169.443182955077, 265.911035056664, 345.859596099218, 382.722269326087, 362.4473561576785, 290.6173697690783];
let G_x=[-587.785252292477, -588.5086806524884, -580.627413601755, -538.47766361467, -433.177963679448, -249.3781319453607, -0.0830488101427, 268.2247132080559, 485.9889339989587, 585.9744355441776];
let G_y=[-809.016994374943, -766.446199463353, -642.118274542251, -446.613955635905, -198.5298560321033, 75.4840590739893, 342.7787566856812, 569.5484339019479, 727.9287609051756, 803.4440520421499];
let G_z=[0.0, 104.7355462356277, 226.0620173694983, 367.565197635512, 511.588792213433, 619.980755015579, 645.954959066278, 554.866789018074, 346.1464746680902, 64.9850915112953];
let H_x=[-951.056516295157, -939.3059837232053, -896.6299381032541, -807.151920849473, -662.027354722674, -474.1168817398217, -280.2118041961617, -125.23108517179207, -35.7739101906673, -1.8107877385034];
let H_y=[-309.016994374943, -258.054610043812, -113.58885805374, 100.134685369622, 346.6722740846677, 584.5729107526893, 777.7640714372473, 906.1557857597799, 971.5034568018176, 994.427146947298];
let H_z=[0.0, 83.6344747960591, 173.4780686294396, 263.420690780663, 331.73161335926, 351.118249843548, 307.899242347178, 217.444151000638, 121.6449976303872, 64.98405043201144];
let I_x=[-951.056516295157, -922.7589354558779, -841.3881770813443, -722.1259186666362, -597.0033813396627, -504.3108367257484, -459.5349695442067, -431.13444549240705, -353.4810735935413, -179.6120661233324];
let I_y=[309.016994374947, 344.925537731874, 435.92566309282, 539.50258681555, 607.7211702189137, 611.9885158402872, 559.1862892015752, 487.6377691369109, 442.6664314006536, 447.2134851446699];
let I_z=[0.0, -50.9283277614949, -103.9172271820794, -162.833268006713, -224.677739512067, -265.568640669042, -241.676017951719, -119.055202872008, 84.7726484044231, 290.61632868885647];
let J_x=[-587.785252292477, -545.6585996014969, -442.2077044225613, -336.9104791723701, -290.6909718593247, -309.0646746803904, -311.7439403603447, -186.68078981469307, 93.0327498657237, 408.1729984190946];
let J_y=[809.016994374947, 795.025537785564, 734.804524437281, 594.9750707226023, 373.5064252490367, 129.6784395527922, -37.1060526886218, -52.8250786883291, 73.8365544084296, 256.2299016894179];
let J_z=[0.0, -243.7270256313139, -469.0095274835994, -642.935215466331, -707.67067143461, -599.068172555101, -309.1983545965317, 54.462322457674, 300.5409003503151, 290.617571211697];
let K_x=[0.0, 48.7280910378061, 165.7738099847297, 278.9351719885019, 321.8938633439463, 297.9440012341056, 290.0771746224143, 366.87848600781393, 465.6440601532427, 425.3259895795837];
let K_y=[999.999999999997, 963.241905771122, 839.36515573234, 611.7874641796279, 310.0874298558955, 30.3758982994179, -110.7422801258281, -62.7515966938159, 114.8290350711809, 309.0163061894585];
let K_z=[0.0, -263.0590400817228, -506.3131971729669, -692.1031788428456, -759.4766744883996, -659.4460154717025, -429.0109700417957, -220.200386407694, -190.8310964352499, -324.919090283219];
let first_x=[-224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276];
let first_y=[690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522];
let first_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let B_C_x=[587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473];
let B_C_y=[427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176];
let B_C_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let D_E_x=[587.785252292473, 553.203832371236, 455.449963230763, 311.339892044244, 145.280532791524, -15.403240861024, -145.6516874917458, -227.3378515036541, -252.5005927251173, -224.514188734604];
let D_E_y=[-427.050983124843, -407.397101586882, -349.435466853463, -256.11522702591, -132.184612711734, 16.050657874222, 181.048220393747, 354.4128277068039, 527.323508754767, 690.982388718257];
let D_E_z=[0.0, -178.8594086671015, -330.221642265648, -431.685140880553, -470.037541394593, -443.545423967688, -361.9987083405225, -244.516242378313, -115.565081311128, -0.000400890515];
let F_G_x=[-224.513988289796, -223.3225614081653, -212.8721121700201, -175.972823172177, -94.345950961057, 39.615750554083, 213.5246261321902, 393.3146050934979, 532.0995431081387, 587.7852311301097];
let F_G_y=[-690.983005625053, -659.30207109922, -567.3426705939, -424.436058070805, -246.116408854313, -53.26192977054, 130.224951766861, 281.3208311091426, 382.6932316563736, 427.0509179958672];
let F_G_z=[0.0, 72.2198912573107, 154.9094975734553, 249.258751210654, 341.805339256381, 405.959634598313, 411.240931001114, 337.667798028898, 189.3527413041712, 0.000759457511399733];
let H_I_x=[-726.542528005357, -708.1125110900783, -649.5768605003229, -547.2715147685425, -410.608031078076, -270.9655630727112, -173.6037925850757, -150.42793519672708, -188.9589734951093, -224.5139693616114];
let H_I_y=[-3e-12, 43.277825883993, 163.067018939075, 331.151980496022, 507.3344042282297, 650.2815599557813, 731.3598721464772, 746.5007505135719, 719.3051825861241, 690.9830638781349];
let H_I_z=[0.0, 43.0589277268694, 82.2402676773733, 105.334582478853, 93.248831200583, 34.400790751013, -55.940579413482, -128.638819137538, -120.9006694373808, -0.000679278677799067];
let last_x=[-224.513988289796, -186.9726641083309, -97.9230149311353, -14.9168703787051, 12.7053076478893, -1.1420032989854, 30.6383865146883, 187.39870827570292, 428.1079540789217, 587.7850117564836];
let last_y=[690.983005625057, 665.300727621849, 576.107446798247, 407.813067815187, 183.6575873462367, -16.2545723569758, -92.6958771145048, -0.4005355243481, 209.5948286492986, 427.050242836228];
let last_z=[0.0, -223.3823197424959, -422.3048823084394, -558.149990845341, -574.230984390411, -426.484227083333, -149.254153656806, 111.15650322431, 177.2837210586931, 0.001037845677449603];


let sec=floor(millis()/1000);
let steparray=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 8, 7, 6, 5, 4, 3, 2, 1];
let t=steparray[sec%18];

background(0)

let angle=((sec*5)%360);




//adapted from
//from https://discourse.processing.org/t/how-to-rotate-around-a-sphere/25072/24
//and math.fandom.com/wiki/Ellipsoid
//and Simon Greenwold.

  let latitude = (frameCount%360)*3.141/180;
  let longitude = (((frameCount-(latitude/2))/5)%360)*3.141/180;
  let radius=5000;
  
  let cam_x = radius * cos(latitude)*cos(longitude);
  let cam_y = radius * cos(latitude)*sin(longitude);
  let cam_z = radius * sin(latitude);
  camera(cam_x, cam_y, cam_z, 0, 0, 0, 0, 1, 0);

/**
 * Points and Lines. 
 * 
 * Points and lines can be used to draw basic geometry.
 * Change the value of the variable 'd' to scale the form.
 * The four variables set the positions based on the value of 'd'. 
 */




//let cam_x=350 * cos(angle);
//let cam_y=350*sin(angle);
//let cam_x=350*cos(angle);
//let cam_y=350*sin(angle);
//console.log(angle,cam_x,cam_y);

//camera(cam_x,cam_y,-900,0,0,0,0,1,0);


fill(127);

beginShape();
vertex(A_x[t],A_y[t],A_z[t]);
vertex(B_x[t],B_y[t],B_z[t]);
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(first_x[t],first_y[t],first_z[t]);
endShape(CLOSE);
beginShape();
vertex(B_x[t],B_y[t],B_z[t]);
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(C_x[t],C_y[t],C_z[t]);
endShape(CLOSE);
beginShape();
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(C_x[t],C_y[t],C_z[t]);
vertex(D_x[t],D_y[t],D_z[t]);
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
endShape(CLOSE);
beginShape();
vertex(D_x[t],D_y[t],D_z[t]);
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
vertex(E_x[t],E_y[t],E_z[t]);
endShape(CLOSE);
beginShape();
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
vertex(E_x[t],E_y[t],E_z[t]);
vertex(F_x[t],F_y[t],F_z[t]);
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
endShape(CLOSE);
beginShape();
vertex(F_x[t],F_y[t],F_z[t]);
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
vertex(G_x[t],G_y[t],G_z[t]);
endShape(CLOSE);
beginShape();
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
vertex(G_x[t],G_y[t],G_z[t]);
vertex(H_x[t],H_y[t],H_z[t]);
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
endShape(CLOSE);
beginShape();
vertex(H_x[t],H_y[t],H_z[t]);
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
vertex(I_x[t],I_y[t],I_z[t]);
endShape(CLOSE);
beginShape();
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
vertex(I_x[t],I_y[t],I_z[t]);
vertex(J_x[t],J_y[t],J_z[t]);
vertex(last_x[t],last_y[t],last_z[t]);
endShape(CLOSE);
beginShape();
vertex(J_x[t],J_y[t],J_z[t]);
vertex(K_x[t],K_y[t],K_z[t]);
vertex(last_x[t],last_y[t],last_z[t]);
endShape(CLOSE);

}

function polygon( x, y,  radius,  npoints) {
  var angle = 3 / npoints;
  beginShape();
  for (var a = 0; a < TWO_PI; a += angle) {
    var sx = x + cos(a) * radius;
    var sy = y + sin(a) * radius;
    vertex(sx, sy);
  }
  endShape(CLOSE);
}

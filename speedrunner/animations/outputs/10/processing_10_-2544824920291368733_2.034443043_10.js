

function setup() {
  createCanvas(1000, 800, WEBGL);
  fill(204);
  
  
  
}

function draw() {

  background(0);

let A_x=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let A_y=[1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0];
let A_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let B_x=[587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732];
let B_y=[809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474];
let B_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let C_x=[951.056516295153, 941.814706920499, 914.559511644446, 870.67770307562, 812.402033154485, 742.697628418478, 665.1111212879322, 583.5901937294599, 502.2827151023877, 425.325694262993];
let C_y=[309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947];
let C_z=[0.0, -81.4196321895832, -158.696549033287, -227.898820839445, -285.505364232078, -328.585098525633, -354.946082150799, -363.24704091535, -353.065613426404, -324.919841276231];
let D_x=[951.056516295154, 916.7913563896467, 818.8007968971859, 670.639961193562, 492.202610087155, 306.226334448045, 134.3911659391342, -6.23842518047408, -105.7538344054213, -162.459703072703];
let D_y=[-309.016994374943, -294.795312091901, -252.853879190099, -185.326719283224, -95.649684316156, 11.614365146149, 131.007722997453, 256.4555313384356, 381.5748755483186, 499.999553602047];
let D_z=[0.0, -210.8435161426382, -397.647174140869, -540.269123268268, -625.627724382891, -649.537582419547, -616.890808282712, -540.180656060578, -436.6892918456655, -324.9201313633336];
let E_x=[587.785252292473, 522.9850183721097, 347.8418978177439, 113.565091656699, -113.867541311407, -275.018661680436, -334.5978326060198, -289.3423618050801, -164.2649053086101, -0.000669815628];
let E_y=[-809.016994374943, -754.609693218417, -598.867212724859, -362.900630242515, -77.7288431474126, 221.120021379918, 499.639630251153, 730.8534241638256, 898.7602277641316, 999.999724110497];
let E_z=[0.0, -335.1548764302862, -598.74043520187, -740.521731558934, -745.30991305621, -634.4496491028113, -455.255888020358, -263.116021723054, -103.4299674670755, -0.000290087354600267];
let F_x=[0.0, -77.9824937538733, -265.5258556571201, -449.953751930908, -515.679106952073, -406.290780589668, -149.9845141818658, 162.58946146238193, 429.9132824921809, 587.784872562837];
let F_y=[-1000.000000000003, -881.71401585515, -557.991299966098, -111.949208240385, 348.2869223133744, 723.161756459121, 949.693555295329, 1014.4888526850036, 948.6978259922515, 809.017611281507];
let F_z=[0.0, -403.3351652700104, -662.5774934318182, -702.6283552656183, -547.764868708459, -298.7597054258474, -74.02708734698, 48.772711731466, 59.1262648806265, 0.000290086856934956];
let G_x=[-587.785252292477, -639.4684784508723, -718.1195417249961, -665.267923054375, -388.28682001041, 46.731381274617, 455.2462618239422, 665.8243896248389, 629.1556050689469, 425.326364078285];
let G_y=[-809.016994374943, -623.943474285226, -150.430787459593, 409.592132199271, 837.8783935654874, 1004.036043244934, 913.1944931935891, 678.2466393251746, 443.3402063463975, 309.017270263273];
let G_z=[0.0, -387.40255287613, -557.6041862198012, -450.4370604596123, -192.747393427205, 14.0446537708916, 45.678958829516, -76.374370864635, -235.6315754056015, -324.91955118898204];
let H_x=[-951.056516295157, -931.0338232098483, -786.22561275645, -396.870188489245, 165.287096632494, 620.502532433756, 717.2839077005882, 459.01273273990194, 82.1680109625589, -162.459323345191];
let H_y=[-309.016994374943, -87.089515578149, 422.3603254721, 873.493141825307, 995.1126386951164, 776.344241897765, 436.2048240826651, 230.8313484154006, 273.7085301199335, 499.998936692554];
let H_z=[0.0, -293.89593275634, -335.7080048979122, -142.6635713505723, 32.639656381036, -16.1069788033792, -247.208628744596, -449.220863789982, -468.0012755913435, -324.92042145350445];
let I_x=[-951.056516295157, -833.0173768786556, -436.17976623341, 186.324260419367, 697.367067078839, 727.923546408861, 305.4328669196082, -144.95786560066708, -246.6284594253641, -0.001339636115];
let I_y=[309.016994374947, 508.517962168641, 877.255835638079, 987.799315384029, 692.8342243932864, 273.067145208038, 120.6928779605301, 349.1425231838486, 738.8888450296405, 999.999448220308];
let I_z=[0.0, -161.19129850869, -106.5705103386232, 26.9959249903297, -53.8743687657623, -358.3625864334482, -583.061190610578, -505.68318321755, -228.2802566316945, -0.000580179926451439];
let J_x=[-587.785252292477, -385.6460080157766, 158.993051696537, 717.284002603687, 777.659683290563, 259.078155463465, -260.5444856043388, -232.33360563589517, 222.4836088310989, 587.784492828107];
let J_y=[809.016994374947, 918.436065781663, 989.404421615594, 680.572455595615, 175.4958951547404, 9.172337806782, 364.8396042292371, 854.1858784850386, 1018.6985946274115, 809.018228190656];
let J_z=[0.0, -43.75187624267, 16.5474116332308, -48.2331920736049, -382.3255221092193, -662.5163982885862, -538.0276061165915, -160.338861460954, 60.8674265619915, 0.000580172220260841];
let K_x=[0.0, 227.4748791257304, 705.103534707639, 861.851350060358, 341.2322558430689, -306.297566321994, -266.37598890270357, 329.07723634310884, 662.3893893491258, 425.327033891819];
let K_y=[999.999999999997, 974.4305622212862, 703.371907447376, 145.164730247936, -138.5305155346096, 254.684568401896, 860.5280632485931, 981.8757349523806, 619.7912885555165, 309.017546149977];
let K_z=[0.0, 10.2240940533234, -27.2104726174016, -321.0057363984999, -687.0951485670433, -617.3494956506902, -168.9409544825825, 64.336856661595, -110.3688916634165, -324.91926110215076];
let first_x=[-224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276];
let first_y=[690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522];
let first_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let B_C_x=[587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473];
let B_C_y=[427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176];
let B_C_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let D_E_x=[587.785252292473, 553.203832371236, 455.449963230763, 311.339892044244, 145.280532791524, -15.403240861024, -145.6516874917458, -227.3378515036541, -252.5005927251173, -224.514188734604];
let D_E_y=[-427.050983124843, -407.397101586882, -349.435466853463, -256.11522702591, -132.184612711734, 16.050657874222, 181.048220393747, 354.4128277068039, 527.323508754767, 690.982388718257];
let D_E_z=[0.0, -178.8594086671015, -330.221642265648, -431.685140880553, -470.037541394593, -443.545423967688, -361.9987083405225, -244.516242378313, -115.565081311128, -0.000400890515];
let F_G_x=[-224.513988289796, -277.3128432524153, -392.2034244683211, -467.423996492782, -410.00939385107, -196.8168474183651, 109.4776437945332, 397.2165676542699, 568.6334674417619, 587.785452736641];
let F_G_y=[-690.983005625053, -583.050955353813, -292.946344742027, 90.691108655914, 456.5546954117784, 709.855271982717, 803.007448034494, 746.3873495094164, 596.3355721894886, 427.051600031858];
let F_G_z=[0.0, -273.0822504808154, -418.44228699762, -379.31778279167, -197.037004415099, 20.3666685123456, 164.846536699732, 186.503386547678, 109.0821067102715, 0.000400890532929431];
let H_I_x=[-726.542528005357, -680.2462397677376, -486.3236997935701, -96.507449827245, 355.010943664019, 596.115381719422, 471.6047640640601, 111.40988710898392, -187.2847961887431, -224.514389183136];
let H_I_y=[-3e-12, 158.862968584426, 498.63150487569, 731.786536543706, 673.8470779854754, 395.192941480614, 143.8239376057521, 128.0746245585246, 361.9103612131247, 690.981771809437];
let H_I_z=[0.0, -143.859279648388, -111.7893063845762, 46.0147183208857, 114.440237795831, -21.3018628889966, -239.914154444722, -328.75779408897, -212.0449209907857, -0.000801785455065044];
let last_x=[-224.513988289796, -61.9942135928106, 336.18490540557, 637.260867213603, 465.972610222955, -51.813013098382, -310.5567002613318, -9.34041582752308, 461.0121376089329, 587.785653176775];
let last_y=[690.983005625057, 725.355855173701, 653.617038906396, 307.209458573022, -41.0969093391096, 30.49928710666, 481.2264150670991, 826.0273757924836, 748.5979247736389, 427.05221694139];
let last_z=[0.0, 18.438010304104, 58.3554771562558, -57.9493645178315, -339.4680924807223, -441.6320930649619, -177.679271309264, 148.496320756863, 187.5473494145975, 0.000801781765609961];


let sec=floor(millis()/1000);
let steparray=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 8, 7, 6, 5, 4, 3, 2, 1];
let t=steparray[sec%18];

background(0)

let angle=((sec*5)%360);




//adapted from
//from https://discourse.processing.org/t/how-to-rotate-around-a-sphere/25072/24
//and math.fandom.com/wiki/Ellipsoid
//and Simon Greenwold.

  let latitude = (frameCount%360)*3.141/180;
  let longitude = (((frameCount-(latitude/2))/5)%360)*3.141/180;
  let radius=5000;
  
  let cam_x = radius * cos(latitude)*cos(longitude);
  let cam_y = radius * cos(latitude)*sin(longitude);
  let cam_z = radius * sin(latitude);
  camera(cam_x, cam_y, cam_z, 0, 0, 0, 0, 1, 0);

/**
 * Points and Lines. 
 * 
 * Points and lines can be used to draw basic geometry.
 * Change the value of the variable 'd' to scale the form.
 * The four variables set the positions based on the value of 'd'. 
 */




//let cam_x=350 * cos(angle);
//let cam_y=350*sin(angle);
//let cam_x=350*cos(angle);
//let cam_y=350*sin(angle);
//console.log(angle,cam_x,cam_y);

//camera(cam_x,cam_y,-900,0,0,0,0,1,0);


fill(127);

beginShape();
vertex(A_x[t],A_y[t],A_z[t]);
vertex(B_x[t],B_y[t],B_z[t]);
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(first_x[t],first_y[t],first_z[t]);
endShape(CLOSE);
beginShape();
vertex(B_x[t],B_y[t],B_z[t]);
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(C_x[t],C_y[t],C_z[t]);
endShape(CLOSE);
beginShape();
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(C_x[t],C_y[t],C_z[t]);
vertex(D_x[t],D_y[t],D_z[t]);
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
endShape(CLOSE);
beginShape();
vertex(D_x[t],D_y[t],D_z[t]);
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
vertex(E_x[t],E_y[t],E_z[t]);
endShape(CLOSE);
beginShape();
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
vertex(E_x[t],E_y[t],E_z[t]);
vertex(F_x[t],F_y[t],F_z[t]);
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
endShape(CLOSE);
beginShape();
vertex(F_x[t],F_y[t],F_z[t]);
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
vertex(G_x[t],G_y[t],G_z[t]);
endShape(CLOSE);
beginShape();
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
vertex(G_x[t],G_y[t],G_z[t]);
vertex(H_x[t],H_y[t],H_z[t]);
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
endShape(CLOSE);
beginShape();
vertex(H_x[t],H_y[t],H_z[t]);
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
vertex(I_x[t],I_y[t],I_z[t]);
endShape(CLOSE);
beginShape();
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
vertex(I_x[t],I_y[t],I_z[t]);
vertex(J_x[t],J_y[t],J_z[t]);
vertex(last_x[t],last_y[t],last_z[t]);
endShape(CLOSE);
beginShape();
vertex(J_x[t],J_y[t],J_z[t]);
vertex(K_x[t],K_y[t],K_z[t]);
vertex(last_x[t],last_y[t],last_z[t]);
endShape(CLOSE);

}

function polygon( x, y,  radius,  npoints) {
  var angle = 3 / npoints;
  beginShape();
  for (var a = 0; a < TWO_PI; a += angle) {
    var sx = x + cos(a) * radius;
    var sy = y + sin(a) * radius;
    vertex(sx, sy);
  }
  endShape(CLOSE);
}



function setup() {
  createCanvas(1000, 800, WEBGL);
  fill(204);
  
  
  
}

function draw() {

  background(0);

let A_x=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let A_y=[1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0];
let A_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let B_x=[587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732];
let B_y=[809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474];
let B_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let C_x=[951.056516295153, 948.311272616262, 940.117033233915, 926.597646005606, 907.957443153609, 884.478152984692, 856.514641844247, 824.489550660995, 788.886907145622, 750.244810188668];
let C_y=[309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947];
let C_z=[0.0, 44.575777274164, 88.4778355789539, 131.04263854365, 171.626861094892, 209.617112681532, 244.439208068665, 275.566845581922, 302.529561638908, 324.919841342873];
let D_x=[951.056516295154, 958.523749248345, 980.2899426020012, 1014.4896625844053, 1058.148278643332, 1107.374945631695, 1157.616004849242, 1203.953254053226, 1241.428759395839, 1265.376214371129];
let D_y=[-309.016994374943, -304.792498736914, -292.182860913554, -271.378663160922, -242.694340437322, -206.563428028604, -163.532009089322, -114.250461133707, -59.463626220116, 0.000446603057];
let D_z=[0.0, -26.8358655923779, -49.0390092222871, -62.301317620793, -62.943655434066, -48.180984890879, -16.331610412927, 33.042681496811, 99.074614641006, 179.611820648047];
let E_x=[587.785252292473, 614.435578098606, 691.6067422094202, 811.2733213734143, 961.0678547897377, 1125.6634887579703, 1288.467399965947, 1433.420465269072, 1546.688515895243, 1618.047600538882];
let E_y=[-809.016994374943, -792.771050156792, -744.703303600083, -666.788315989782, -562.20011227772, -435.143969384395, -290.634788412942, -134.2349205918796, 28.2333653999669, 190.984174846625];
let E_z=[0.0, -186.3547518694879, -355.3938198781481, -491.626761037191, -582.998906647996, -622.099512692446, -606.830388679511, -540.46532333581, -431.106231837643, -290.615911599647];
let F_x=[0.0, 50.383943375697, 194.0540656719812, 409.8678055630413, 666.6748565733747, 928.6107275608713, 1161.014215148811, 1335.857442485643, 1435.710124265484, 1455.587267515937];
let F_y=[-1000.000000000003, -964.404512499385, -860.461326130157, -696.413797254008, -485.0790344312992, -242.576848742804, 13.240690000455, 264.4816080413954, 494.8405398757679, 690.984280274263];
let F_z=[0.0, -371.7023151683179, -703.2550357968901, -960.627778079771, -1120.912573701633, -1175.321099945254, -1129.689251613963, -1002.496272115319, -820.885082686536, -615.535203142236];
let G_x=[-587.785252292477, -513.416934525145, -305.5681394447018, -6.1871535684297, 326.4672531476267, 631.8616355267333, 861.024284458993, 986.5339678011422, 1006.273620939539, 940.455693435799];
let G_y=[-809.016994374943, -752.684607130618, -591.343926366747, -346.709072691351, -51.0184865009612, 258.125462385229, 543.605682733312, 774.2896906488133, 929.2430319608019, 1000.000210855167];
let G_z=[0.0, -510.5160860953299, -948.0396115957791, -1254.857089758212, -1399.868194816945, -1383.174854441213, -1233.057656933487, -996.5937139744262, -726.8384148475571, -470.22647221723];
let H_x=[-951.056516295157, -856.850734434026, -599.5997585577888, -246.6534741106807, 115.5197280878827, 409.5702852598223, 590.371626441777, 654.9527797650032, 636.743805805265, 587.784912497283];
let H_y=[-309.016994374943, -240.269961439899, -49.205520504304, 222.425934441295, 516.6090603625888, 773.114224488575, 943.558502677284, 1001.8728616781384, 948.7006444068857, 809.015759993541];
let H_z=[0.0, -548.6010859233994, -988.0066868047942, -1239.7804989261883, -1276.312049834364, -1123.676989798983, -847.375285315093, -527.3114670750853, -231.8281843524361, 0.001420459728];
let I_x=[-951.056516295157, -845.8357484919475, -565.8311718972276, -201.5796927293962, 142.3882655313985, 392.1935003625362, 531.1881532525287, 596.928459140597, 652.7033283882656, 750.246020647431];
let I_y=[309.016994374947, 372.785059380996, 540.622586466748, 750.758411798737, 925.6960454959979, 1000.156363656457, 943.9565062611656, 771.6509145727964, 536.0698051552197, 309.015549137707];
let I_z=[0.0, -471.0883593484367, -806.5445749687552, -922.2916662856834, -813.827529509408, -549.119833687588, -232.181682174992, 43.29964790357475, 228.0055849462959, 324.92016220186];
let J_x=[-587.785252292477, -484.6723924632945, -218.2977616045856, 108.4245342638468, 393.2460119813725, 589.9292492191852, 723.3005535294576, 857.226715775703, 1040.0906882765905, 1265.377764625525];
let J_y=[809.016994374947, 847.134577829608, 932.987615059411, 996.712204843092, 965.7216758427624, 806.0069458679, 544.5318625524606, 261.2398691983514, 54.9083014731457, 0.000235746689];
let J_z=[0.0, -308.2400377120147, -479.0751499563522, -447.5600345361974, -250.414402921574, 3.304449311056, 198.537241147538, 275.01368201157277, 247.515890511862, 179.610721047027];
let K_x=[0.0, 85.6357410956365, 298.5536741921774, 541.6120452671188, 738.9987316243795, 886.7317312283872, 1037.4294805721545, 1235.027684740923, 1457.5894399235146, 1618.047940336487];
let K_y=[999.999999999997, 997.585425462532, 964.8092098343026, 847.826743641463, 616.0883089713284, 304.607050335145, 14.071786328934603, -135.5786236742806, -70.8455785701823, 190.9854092265];
let K_z=[0.0, -123.6345489171997, -141.7059298563192, -32.6531642584554, 123.988557643257, 209.392883443198, 154.9352230974147, -10.93652836313325, -190.487266186135, -290.617332058511];
let first_x=[-224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276];
let first_y=[690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522];
let first_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let B_C_x=[587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473];
let B_C_y=[427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176];
let B_C_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let D_E_x=[587.785252292473, 601.898547888696, 643.302847612198, 709.249031864604, 795.343882140528, 895.8210437472945, 1003.89710190646, 1112.191192883631, 1213.182710770445, 1299.67934420018];
let D_E_y=[-427.050983124843, -421.212873738413, -403.786782852355, -375.036088666891, -335.395329607147, -285.463636702844, -225.995678312892, -157.890254056438, -82.176710341885, 0.000617190241];
let D_E_z=[0.0, -98.688463249093, -190.0436054896731, -267.194775899893, -324.168481084405, -356.268208610013, -360.376407867434, -335.160151672471, -281.167821571795, -200.81074576228];
let F_G_x=[-224.513988289796, -177.601639888423, -44.2980401690678, 154.5202522863473, 388.5027646554967, 623.5008253499133, 827.761132463592, 977.362411442106, 1059.814345554905, 1075.164685786091];
let F_G_y=[-690.983005625053, -658.404485089044, -563.760435518428, -415.977496840979, -228.81662127241, -19.342421091865, 193.949904506793, 393.1224366383854, 562.6585453891229, 690.983768512694];
let F_G_z=[0.0, -354.8324959961009, -670.7759825215071, -915.33824069447, -1067.546885939433, -1120.801638883219, -1082.949585123721, -973.671219031395, -819.828945349092, -649.838163073596];
let H_I_x=[-726.542528005357, -652.215478476969, -450.6397440161998, -177.7960295533987, 96.9804548656167, 316.3017346861373, 453.728358229301, 519.1284796062342, 549.136700895804, 587.785653368031];
let H_I_y=[-3e-12, 49.735138922301, 185.456414776787, 370.54773882891, 555.6253555422738, 692.354544310735, 746.671107772998, 707.6346437334197, 589.5483044496979, 427.049748744655];
let H_I_z=[0.0, -407.4646712969589, -726.0091220294421, -894.502904599084, -896.796493092406, -762.184409955688, -549.949656408768, -325.13910413342927, -135.7416315837521, 0.00080214772];
let last_x=[-224.513988289796, -153.0999959363475, 29.6396167820714, 250.6192754951048, 443.6573341182895, 589.5658188151152, 719.2211657516816, 878.851823063607, 1084.4928654493865, 1299.680214862886];
let last_y=[690.983005625057, 705.270050871135, 727.691548295037, 710.4475211542506, 610.9394162603749, 424.046647822949, 194.6798261118786, 2.2639272593134, -75.4005395609233, 0.00108868179];
let last_z=[0.0, -182.4138258062947, -273.4575069386932, -238.4399250559944, -118.178701855857, 1.247172937659, 45.289256025208, -4.91818466653135, -108.7790524230421, -200.81190664232];


let sec=floor(millis()/1000);
let steparray=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 8, 7, 6, 5, 4, 3, 2, 1];
let t=steparray[sec%18];

background(0)

let angle=((sec*5)%360);




//adapted from
//from https://discourse.processing.org/t/how-to-rotate-around-a-sphere/25072/24
//and math.fandom.com/wiki/Ellipsoid
//and Simon Greenwold.

  let latitude = (frameCount%360)*3.141/180;
  let longitude = (((frameCount-(latitude/2))/5)%360)*3.141/180;
  let radius=5000;
  
  let cam_x = radius * cos(latitude)*cos(longitude);
  let cam_y = radius * cos(latitude)*sin(longitude);
  let cam_z = radius * sin(latitude);
  camera(cam_x, cam_y, cam_z, 0, 0, 0, 0, 1, 0);

/**
 * Points and Lines. 
 * 
 * Points and lines can be used to draw basic geometry.
 * Change the value of the variable 'd' to scale the form.
 * The four variables set the positions based on the value of 'd'. 
 */




//let cam_x=350 * cos(angle);
//let cam_y=350*sin(angle);
//let cam_x=350*cos(angle);
//let cam_y=350*sin(angle);
//console.log(angle,cam_x,cam_y);

//camera(cam_x,cam_y,-900,0,0,0,0,1,0);


fill(127);

beginShape();
vertex(A_x[t],A_y[t],A_z[t]);
vertex(B_x[t],B_y[t],B_z[t]);
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(first_x[t],first_y[t],first_z[t]);
endShape(CLOSE);
beginShape();
vertex(B_x[t],B_y[t],B_z[t]);
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(C_x[t],C_y[t],C_z[t]);
endShape(CLOSE);
beginShape();
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(C_x[t],C_y[t],C_z[t]);
vertex(D_x[t],D_y[t],D_z[t]);
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
endShape(CLOSE);
beginShape();
vertex(D_x[t],D_y[t],D_z[t]);
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
vertex(E_x[t],E_y[t],E_z[t]);
endShape(CLOSE);
beginShape();
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
vertex(E_x[t],E_y[t],E_z[t]);
vertex(F_x[t],F_y[t],F_z[t]);
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
endShape(CLOSE);
beginShape();
vertex(F_x[t],F_y[t],F_z[t]);
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
vertex(G_x[t],G_y[t],G_z[t]);
endShape(CLOSE);
beginShape();
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
vertex(G_x[t],G_y[t],G_z[t]);
vertex(H_x[t],H_y[t],H_z[t]);
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
endShape(CLOSE);
beginShape();
vertex(H_x[t],H_y[t],H_z[t]);
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
vertex(I_x[t],I_y[t],I_z[t]);
endShape(CLOSE);
beginShape();
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
vertex(I_x[t],I_y[t],I_z[t]);
vertex(J_x[t],J_y[t],J_z[t]);
vertex(last_x[t],last_y[t],last_z[t]);
endShape(CLOSE);
beginShape();
vertex(J_x[t],J_y[t],J_z[t]);
vertex(K_x[t],K_y[t],K_z[t]);
vertex(last_x[t],last_y[t],last_z[t]);
endShape(CLOSE);

}

function polygon( x, y,  radius,  npoints) {
  var angle = 3 / npoints;
  beginShape();
  for (var a = 0; a < TWO_PI; a += angle) {
    var sx = x + cos(a) * radius;
    var sy = y + sin(a) * radius;
    vertex(sx, sy);
  }
  endShape(CLOSE);
}



function setup() {
  createCanvas(1000, 800, WEBGL);
  fill(204);
  
  
  
}

function draw() {

  background(0);

let A_x=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let A_y=[1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0];
let A_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let B_x=[587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732];
let B_y=[809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474];
let B_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let C_x=[951.056516295153, 948.311272616262, 940.117033233915, 926.597646005606, 907.957443153609, 884.478152984692, 856.514641844247, 824.489550660995, 788.886907145622, 750.244810188668];
let C_y=[309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947];
let C_z=[0.0, -44.575777274164, -88.4778355789539, -131.04263854365, -171.626861094892, -209.617112681532, -244.439208068665, -275.566845581922, -302.529561638908, -324.919841342873];
let D_x=[951.056516295154, 940.8232938359087, 910.5541773753652, 861.5176963627148, 795.752339097107, 715.957606661912, 625.350493053049, 527.495747218916, 426.119776979171, 324.918970682525];
let D_y=[-309.016994374943, -304.792498736914, -292.182860913554, -271.378663160922, -242.694340437321, -206.563428028604, -163.532009089322, -114.250461133706, -59.463626220115, 0.000446603056];
let D_z=[0.0, -116.3242796253931, -228.6590854117029, -333.209629217411, -426.55945789929, -505.832684100974, -568.825685728672, -614.100969525635, -641.038132825479, -649.839392465357];
let E_x=[587.785252292473, 568.2447352058576, 511.3840209723182, 422.3027335413508, 308.911956734079, 181.123796163535, 49.851479347578, -74.065712585913, -180.89190610676, -262.866046816186];
let E_y=[-809.016994374943, -792.771050156792, -744.703303600083, -666.788315989783, -562.20011227772, -435.143969384394, -290.634788412942, -134.234920591881, 28.2333653999674, 190.984174846626];
let E_z=[0.0, -187.2338153269835, -362.2796169106409, -514.061596676148, -633.60659048363, -714.80575057459, -754.868100146315, -754.423607427557, -717.2750366718309, -649.8388120248386];
let F_x=[0.0, -23.96414436514337, -91.4846361504878, -190.2194185386002, -302.030132564156, -406.143678656353, -482.708405447066, -516.090717314607, -497.326690694781, -425.324699795584];
let F_y=[-1000.000000000003, -964.404512499385, -860.461326130156, -696.4137972540173, -485.0790344312942, -242.576848742809, 13.240690000458, 264.481608041395, 494.8405398757734, 690.984280274259];
let F_z=[0.0, -229.6202378188712, -433.80215691713, -590.9053037790806, -686.2194608275722, -713.8956315816479, -677.3718165150495, -588.275973561356, -464.0700148406099, -324.9186804623566];
let G_x=[-587.785252292477, -604.5961136633583, -647.4789148567488, -695.9774933730002, -722.676214314613, -701.193308514877, -613.950452377914, -457.5573834842355, -244.382511704434, 0.001809832791];
let G_y=[-809.016994374943, -752.684607130618, -591.343926366746, -346.7090726913503, -51.0184865009642, 258.125462385233, 543.605682733317, 774.289690648808, 929.2430319608004, 1000.000210855161];
let G_z=[0.0, -226.935251856805, -413.4994861424729, -528.6045284351111, -557.3228903204272, -503.63645151688786, -388.4868725477706, -243.840814222241, -104.5151116125669, 0.000580438969449572];
let H_x=[-951.056516295157, -946.9637409284784, -925.5085344481568, -863.7173165902562, -736.5570535028162, -530.868389517801, -255.557165737333, 56.3758758384475, 355.078408102005, 587.786592536322];
let H_y=[-309.016994374943, -240.269961439899, -49.205520504299, 222.4259344412947, 516.6090603625868, 773.11422448857, 943.558502677285, 1001.872861678135, 948.7006444068895, 809.015759993522];
let H_z=[0.0, -180.22711624195628, -309.8100904990899, -355.6458437347511, -313.2485131416462, -207.42367642774383, -82.6143416465316, 13.150462820974, 44.5956465265771, -0.000580442058578348];
let I_x=[-951.056516295157, -917.4015680968814, -810.0148546751418, -616.7410829402282, -336.5294131635302, 4.871957631251, 351.295716251022, 629.2100250698905, 772.887389055962, 750.244340598529];
let I_y=[309.016994374947, 372.785059380996, 540.622586466749, 750.7584117987367, 925.6960454960038, 1000.156363656454, 943.9565062611432, 771.650914572791, 536.0698051552286, 309.015549137705];
let I_z=[0.0, -107.73138785838029, -165.8308370993969, -151.1133411062471, -79.5997664958742, 0.903371093181159, 34.4131442944734, -15.57067565586, -148.1151657875559, -324.9210022244226];
let J_x=[-587.785252292477, -527.4511109493114, -349.0010077636798, -67.9768658319792, 271.5479550216368, 591.616111063922, 798.235053625205, 819.0040463843275, 640.924324353231, 324.917160848036];
let J_y=[809.016994374947, 847.134577829598, 932.987615059415, 996.7122048430977, 965.7216758427764, 806.006945867895, 544.5318625524183, 261.239869198354, 54.9083014731555, 0.000235746691];
let J_z=[0.0, -37.75148668609299, -41.4044390020409, -8.5280089055341, 23.3850598934988, -0.916858301013951, -116.1564208765466, -307.845897806447, -512.8553036648809, -649.8399729050305];
let K_x=[0.0, 70.64512180187553, 265.9198487974592, 531.6569168849758, 774.7515544806319, 885.019684765141, 784.4992845747252, 479.3320273784965, 75.458273987817, -262.867387060795];
let K_y=[999.999999999997, 997.585425462532, 964.8092098343133, 847.8267436414627, 616.0883089713185, 304.607050335157, 14.071786328880242, -135.578623674286, -70.8455785701695, 190.985409226513];
let K_z=[0.0, 2.39138398194321, 11.7532276341204, 6.9140543446422, -57.2911913316373, -211.81612086306095, -432.9993589888266, -638.185139297514, -728.2621716805039, -649.8382315852261];
let first_x=[-224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276];
let first_y=[690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522];
let first_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let B_C_x=[587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473];
let B_C_y=[427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176];
let B_C_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let D_E_x=[587.785252292473, 577.437120125061, 546.930390300469, 497.846973872127, 432.721612197605, 354.895585077089, 268.324255643473, 177.349910383622, 86.453408403691, -0.000601611441];
let D_E_y=[-427.050983124843, -421.212873738413, -403.786782852355, -375.036088666891, -335.395329607147, -285.463636702844, -225.995678312892, -157.890254056438, -82.176710341885, 0.000617190241];
let D_E_z=[0.0, -99.1539916074976, -193.7257226834199, -279.387909707857, -352.308183943407, -409.3598517047, -448.291086635275, -467.842652938545, -467.807339896681, -449.027776041916];
let F_G_x=[-224.513988289796, -240.97542300257138, -286.2136030912408, -348.6378214401242, -411.579590054674, -456.688104636679, -467.655404097984, -433.513622274097, -350.848708674195, -224.5129382624418];
let F_G_y=[-690.983005625053, -658.404485089044, -563.760435518428, -415.977496840981, -228.816621272409, -19.342421091863, 193.949904506789, 393.122436638382, 562.6585453891264, 690.983768512696];
let F_G_z=[0.0, -157.7305868297719, -292.5674420106598, -385.583301102559, -425.017382513034, -408.102098190255, -341.193856658658, -238.23227008582, -117.8866058480849, 0.000802148353449572];
let H_I_x=[-726.542528005357, -714.1158472352954, -670.44108748735, -580.4485558594902, -430.762438020383, -221.304855713792, 27.631936699517, 276.7246741608365, 477.585907571021, 587.785653363871];
let H_I_y=[-3e-12, 49.7351389223, 185.456414776789, 370.5477388289177, 555.6253555422797, 692.354544310725, 746.671107772987, 707.63464373343, 589.5483044497104, 427.049748744652];
let H_I_z=[0.0, -93.18153096118598, -149.2722215044379, -146.5602774961441, -87.7148890349082, 1.253889081008159, 81.5115848219114, 116.920939975666, 88.1793938119411, -0.000802149781578348];
let last_x=[-224.513988289796, -175.21756938590946, -33.3356203400628, 177.9249403743748, 409.5798170219298, 589.555621629884, 645.286910041272, 539.0135607558595, 295.217437411433, -0.002052713097];
let last_y=[690.983005625057, 705.270050871136, 727.691548295032, 710.4475211542526, 610.9394162603738, 424.046647822965, 194.67982611183723, 2.263927259311, -75.4005395609135, 0.001088681792];
let last_z=[0.0, 3.52831392955671, 22.6808315683801, 50.4878053080539, 54.6066407097108, -1.261606074451241, -126.5704365731596, -286.993482967011, -415.8790796731989, -449.0277760414606];


let sec=floor(millis()/1000);
let steparray=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 8, 7, 6, 5, 4, 3, 2, 1];
let t=steparray[sec%18];

background(0)

let angle=((sec*5)%360);




//adapted from
//from https://discourse.processing.org/t/how-to-rotate-around-a-sphere/25072/24
//and math.fandom.com/wiki/Ellipsoid
//and Simon Greenwold.

  let latitude = (frameCount%360)*3.141/180;
  let longitude = (((frameCount-(latitude/2))/5)%360)*3.141/180;
  let radius=5000;
  
  let cam_x = radius * cos(latitude)*cos(longitude);
  let cam_y = radius * cos(latitude)*sin(longitude);
  let cam_z = radius * sin(latitude);
  camera(cam_x, cam_y, cam_z, 0, 0, 0, 0, 1, 0);

/**
 * Points and Lines. 
 * 
 * Points and lines can be used to draw basic geometry.
 * Change the value of the variable 'd' to scale the form.
 * The four variables set the positions based on the value of 'd'. 
 */




//let cam_x=350 * cos(angle);
//let cam_y=350*sin(angle);
//let cam_x=350*cos(angle);
//let cam_y=350*sin(angle);
//console.log(angle,cam_x,cam_y);

//camera(cam_x,cam_y,-900,0,0,0,0,1,0);


fill(127);

beginShape();
vertex(A_x[t],A_y[t],A_z[t]);
vertex(B_x[t],B_y[t],B_z[t]);
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(first_x[t],first_y[t],first_z[t]);
endShape(CLOSE);
beginShape();
vertex(B_x[t],B_y[t],B_z[t]);
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(C_x[t],C_y[t],C_z[t]);
endShape(CLOSE);
beginShape();
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(C_x[t],C_y[t],C_z[t]);
vertex(D_x[t],D_y[t],D_z[t]);
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
endShape(CLOSE);
beginShape();
vertex(D_x[t],D_y[t],D_z[t]);
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
vertex(E_x[t],E_y[t],E_z[t]);
endShape(CLOSE);
beginShape();
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
vertex(E_x[t],E_y[t],E_z[t]);
vertex(F_x[t],F_y[t],F_z[t]);
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
endShape(CLOSE);
beginShape();
vertex(F_x[t],F_y[t],F_z[t]);
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
vertex(G_x[t],G_y[t],G_z[t]);
endShape(CLOSE);
beginShape();
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
vertex(G_x[t],G_y[t],G_z[t]);
vertex(H_x[t],H_y[t],H_z[t]);
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
endShape(CLOSE);
beginShape();
vertex(H_x[t],H_y[t],H_z[t]);
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
vertex(I_x[t],I_y[t],I_z[t]);
endShape(CLOSE);
beginShape();
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
vertex(I_x[t],I_y[t],I_z[t]);
vertex(J_x[t],J_y[t],J_z[t]);
vertex(last_x[t],last_y[t],last_z[t]);
endShape(CLOSE);
beginShape();
vertex(J_x[t],J_y[t],J_z[t]);
vertex(K_x[t],K_y[t],K_z[t]);
vertex(last_x[t],last_y[t],last_z[t]);
endShape(CLOSE);

}

function polygon( x, y,  radius,  npoints) {
  var angle = 3 / npoints;
  beginShape();
  for (var a = 0; a < TWO_PI; a += angle) {
    var sx = x + cos(a) * radius;
    var sy = y + sin(a) * radius;
    vertex(sx, sy);
  }
  endShape(CLOSE);
}

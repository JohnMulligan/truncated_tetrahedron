

function setup() {
  createCanvas(1000, 800, WEBGL);
  fill(204);
  
  
  
}

function draw() {

  background(0);

let A_x=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let A_y=[1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0];
let A_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let B_x=[587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732];
let B_y=[809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474];
let B_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let C_x=[951.056516295153, 941.814706920499, 914.559511644446, 870.67770307562, 812.402033154485, 742.697628418478, 665.1111212879322, 583.5901937294599, 502.2827151023877, 425.325694262993];
let C_y=[309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947];
let C_z=[0.0, 81.4196321895832, 158.696549033287, 227.898820839445, 285.505364232078, 328.585098525633, 354.946082150799, 363.24704091535, 353.065613426404, 324.919841276231];
let D_x=[951.056516295154, 975.8447504020533, 1043.148463311335, 1133.309329241757, 1218.333873677532, 1268.020900528612, 1256.697372281904, 1169.175309516927, 1004.6921412213857, 777.997540230119];
let D_y=[-309.016994374943, -294.795312091902, -252.853879190098, -185.326719283223, -95.649684316156, 11.614365146148, 131.007722997453, 256.4555313384356, 381.5748755483187, 499.999553602047];
let D_z=[0.0, -45.9328940905318, -64.310209157048, -34.045701825333, 54.355561600143, 196.09680788303, 372.3936661855586, 553.755245520137, 705.607999071747, 795.147703469983];
let E_x=[587.785252292473, 675.9091338328712, 909.99158612617, 1210.3938199395245, 1477.30343813838, 1626.229203908635, 1615.9530188817862, 1458.602399841107, 1209.1904760391626, 940.457413123589];
let E_y=[-809.016994374943, -754.609693218417, -598.867212724859, -362.900630242516, -77.7288431474125, 221.120021379916, 499.639630251153, 730.8534241638246, 898.7602277641327, 999.999724110492];
let E_z=[0.0, -329.7909080211098, -558.789764168742, -620.979683368907, -506.518416566851, -261.899046514987, 30.3236315571126, 283.302643537069, 436.042137434427, 470.228282011263];
let F_x=[0.0, 165.1042463941552, 580.907291399904, 1053.4183160084285, 1379.8818762525327, 1450.793511110847, 1289.4918860176442, 1013.9940179121679, 755.2165314220757, 587.785712199971];
let F_y=[-1000.000000000003, -881.71401585515, -557.9912999661009, -111.94920824039, 348.2869223133745, 723.161756459133, 949.693555295331, 1014.4888526849996, 948.6978259922635, 809.017611281501];
let F_z=[0.0, -653.6564192844799, -1080.324708319909, -1163.518240718331, -943.53743000755, -576.76794809361, -239.5663544214324, -38.940031563932, 19.653010364429, 0.000129730772];
let G_x=[-587.785252292477, -346.9307968965028, 218.559392854646, 761.1748110767985, 1004.8540666258868, 921.224663324679, 689.3129658810172, 508.00310330926493, 443.1943548261057, 425.325524442349];
let G_y=[-809.016994374943, -623.943474285225, -150.4307874595979, 409.592132199272, 837.8783935654815, 1004.036043244934, 913.1944931935936, 678.2466393251626, 443.3402063464145, 309.017270263272];
let G_z=[0.0, -884.6119855546448, -1371.124364983003, -1320.216598360626, -903.2839266327821, -426.326990482004, -96.6709607258034, 74.551728244027, 190.597003614565, 324.919131371952];
let H_x=[-951.056516295157, -650.0520135261958, 2.05364550855, 517.5857500746336, 655.5052356839608, 579.392720272724, 572.8513260448732, 706.1489083491149, 823.2657692530637, 777.99708032125];
let H_y=[-309.016994374943, -87.089515578145, 422.3603254720971, 873.493141825302, 995.1126386951036, 776.344241897755, 436.2048240826706, 230.8313484154006, 273.7085301199685, 499.998936692544];
let H_z=[0.0, -927.8712770374061, -1287.4487200037709, -992.457183731322, -418.3109400364871, 35.488316278947, 278.6736186385976, 452.074984024825, 647.474258034387, 795.147573742903];
let I_x=[-951.056516295157, -619.8556141812552, 38.4071605408998, 475.9530709465018, 614.3540035770525, 775.069947017398, 1087.083354848318, 1308.654452563917, 1225.3079549571037, 940.45758294309];
let I_y=[309.016994374947, 508.51796216864, 877.2558356380771, 987.799315384031, 692.8342243932995, 273.067145208031, 120.6928779605476, 349.1425231838616, 738.8888450296905, 999.999448220299];
let I_z=[0.0, -765.6802749170571, -870.6579955079768, -386.514257404864, 119.1835693246479, 336.135282222684, 412.7767269434406, 522.4706256899009, 584.7417562118751, 470.228991922902];
let J_x=[-587.785252292477, -268.7344842687572, 309.6506775155788, 662.4781571449438, 914.6793976915785, 1308.033783289616, 1583.0402891161132, 1403.9824327869514, 940.4603322837827, 587.78617210932];
let J_y=[809.016994374947, 918.436065781652, 989.4044216155971, 680.572455595645, 175.4958951547475, 9.172337806795, 364.8396042292546, 854.1858784850546, 1018.6985946274525, 809.018228190668];
let J_z=[0.0, -464.6036871368231, -326.7686129929688, 116.264083510231, 274.5274523736059, 167.983294120388, 136.3981701520896, 179.2363081999229, 113.0062931210611, 0.000259466531];
let K_x=[0.0, 259.2079724480488, 681.7106304023498, 959.7720870498738, 1313.6080821913674, 1632.940319608865, 1434.816817254021, 847.9100931561435, 470.9519162500497, 425.325354622423];
let K_y=[999.999999999997, 974.4305622213069, 703.3719074473761, 145.164730247991, -138.5305155346195, 254.684568401938, 860.5280632485776, 981.8757349523706, 619.7912885555345, 309.017546149987];
let K_z=[0.0, -148.2061681604581, 75.3791254646772, 199.4560189957947, -77.9059871904121, -296.90970274593, -201.6680441230004, -58.3449724241631, 64.0081330939763, 324.918421469352];
let first_x=[-224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276];
let first_y=[690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522];
let first_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let B_C_x=[587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473];
let B_C_y=[427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176];
let B_C_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let D_E_x=[587.785252292473, 634.813615745343, 765.490812918396, 950.7332331334202, 1148.769258779525, 1313.764159267375, 1405.3373438890233, 1397.043979004716, 1282.0980029206057, 1075.165756543879];
let D_E_y=[-427.050983124843, -407.397101586882, -349.435466853463, -256.11522702591, -132.184612711734, 16.050657874222, 181.048220393747, 354.4128277068039, 527.323508754767, 690.982388718256];
let D_E_z=[0.0, -175.9968627659568, -308.187760098117, -361.998427155859, -319.441170744509, -183.094314556705, 24.111968114467, 263.2758636280978, 487.201594486893, 649.838923094567];
let F_G_x=[-224.513988289796, -71.1013770753898, 310.707502770479, 733.7984221017825, 1014.135971490377, 1071.317994660713, 954.1791542765671, 782.6103068620159, 654.7214414666547, 587.785452737679];
let F_G_y=[-690.983005625053, -583.050955353815, -292.946344742026, 90.691108655913, 456.5546954117755, 709.855271982719, 803.007448034494, 746.3873495094084, 596.3355721894967, 427.051600031851];
let F_G_z=[0.0, -623.5679915480678, -1028.931326594249, -1111.768273205424, -923.386593589607, -618.232434538008, -348.8668192846474, -182.052560735796, -88.234026577945, -0.000400890007];
let H_I_x=[-726.542528005357, -490.0045957464058, 11.503918697874, 397.1666190844825, 531.3477610586777, 598.917867803338, 793.2331264085652, 1056.4410746988758, 1179.9672180524597, 1075.165556097764];
let H_I_y=[-3e-12, 158.862968584431, 498.6315048756911, 731.786536543701, 673.8470779854784, 395.192941480607, 143.8239376057686, 128.0746245585246, 361.9103612131631, 690.981771809427];
let H_I_z=[0.0, -683.3508620480048, -913.294429263515, -658.815902320505, -253.1704097390761, 19.980622880658, 169.8466319039216, 339.671747209751, 543.154810343518, 649.839323990716];
let last_x=[-224.513988289796, -4.7671283755892, 386.3532399288288, 654.9379484562268, 946.3872480402395, 1335.455774757024, 1478.6287526104722, 1188.181103288222, 786.3174851325497, 587.785653185869];
let last_y=[690.983005625057, 725.355855173699, 653.6170389064081, 307.209458573055, -41.0969093391135, 30.499287106696, 481.2264150670966, 826.0273757924836, 748.5979247736801, 427.052216941398];
let last_z=[0.0, -267.2732509525561, -161.6577887479748, 36.006676016889, -38.4904433098021, -212.399709400849, -212.0991398200834, -134.6664134560251, -108.7675659493129, -0.000801777207];


let sec=floor(millis()/1000);
let steparray=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 8, 7, 6, 5, 4, 3, 2, 1];
let t=steparray[sec%18];

background(0)

let angle=((sec*5)%360);




//adapted from
//from https://discourse.processing.org/t/how-to-rotate-around-a-sphere/25072/24
//and math.fandom.com/wiki/Ellipsoid
//and Simon Greenwold.

  let latitude = (frameCount%360)*3.141/180;
  let longitude = (((frameCount-(latitude/2))/5)%360)*3.141/180;
  let radius=5000;
  
  let cam_x = radius * cos(latitude)*cos(longitude);
  let cam_y = radius * cos(latitude)*sin(longitude);
  let cam_z = radius * sin(latitude);
  camera(cam_x, cam_y, cam_z, 0, 0, 0, 0, 1, 0);

/**
 * Points and Lines. 
 * 
 * Points and lines can be used to draw basic geometry.
 * Change the value of the variable 'd' to scale the form.
 * The four variables set the positions based on the value of 'd'. 
 */




//let cam_x=350 * cos(angle);
//let cam_y=350*sin(angle);
//let cam_x=350*cos(angle);
//let cam_y=350*sin(angle);
//console.log(angle,cam_x,cam_y);

//camera(cam_x,cam_y,-900,0,0,0,0,1,0);


fill(127);

beginShape();
vertex(A_x[t],A_y[t],A_z[t]);
vertex(B_x[t],B_y[t],B_z[t]);
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(first_x[t],first_y[t],first_z[t]);
endShape(CLOSE);
beginShape();
vertex(B_x[t],B_y[t],B_z[t]);
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(C_x[t],C_y[t],C_z[t]);
endShape(CLOSE);
beginShape();
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(C_x[t],C_y[t],C_z[t]);
vertex(D_x[t],D_y[t],D_z[t]);
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
endShape(CLOSE);
beginShape();
vertex(D_x[t],D_y[t],D_z[t]);
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
vertex(E_x[t],E_y[t],E_z[t]);
endShape(CLOSE);
beginShape();
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
vertex(E_x[t],E_y[t],E_z[t]);
vertex(F_x[t],F_y[t],F_z[t]);
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
endShape(CLOSE);
beginShape();
vertex(F_x[t],F_y[t],F_z[t]);
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
vertex(G_x[t],G_y[t],G_z[t]);
endShape(CLOSE);
beginShape();
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
vertex(G_x[t],G_y[t],G_z[t]);
vertex(H_x[t],H_y[t],H_z[t]);
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
endShape(CLOSE);
beginShape();
vertex(H_x[t],H_y[t],H_z[t]);
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
vertex(I_x[t],I_y[t],I_z[t]);
endShape(CLOSE);
beginShape();
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
vertex(I_x[t],I_y[t],I_z[t]);
vertex(J_x[t],J_y[t],J_z[t]);
vertex(last_x[t],last_y[t],last_z[t]);
endShape(CLOSE);
beginShape();
vertex(J_x[t],J_y[t],J_z[t]);
vertex(K_x[t],K_y[t],K_z[t]);
vertex(last_x[t],last_y[t],last_z[t]);
endShape(CLOSE);

}

function polygon( x, y,  radius,  npoints) {
  var angle = 3 / npoints;
  beginShape();
  for (var a = 0; a < TWO_PI; a += angle) {
    var sx = x + cos(a) * radius;
    var sy = y + sin(a) * radius;
    vertex(sx, sy);
  }
  endShape(CLOSE);
}

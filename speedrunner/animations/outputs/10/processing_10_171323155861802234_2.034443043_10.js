

function setup() {
  createCanvas(1000, 800, WEBGL);
  fill(204);
  
  
  
}

function draw() {

  background(0);

let A_x=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let A_y=[1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0];
let A_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let B_x=[587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732, 587.7852522924732];
let B_y=[809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474, 809.0169943749474];
let B_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let C_x=[951.056516295153, 941.814706920499, 914.559511644446, 870.67770307562, 812.402033154485, 742.697628418478, 665.1111212879322, 583.5901937294599, 502.2827151023877, 425.325694262993];
let C_y=[309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947, 309.016994374947];
let C_z=[0.0, -81.4196321895832, -158.696549033287, -227.898820839445, -285.505364232078, -328.585098525633, -354.946082150799, -363.24704091535, -353.065613426404, -324.919841276231];
let D_x=[951.056516295154, 975.8447504020533, 1043.148463311335, 1133.309329241757, 1218.333873677532, 1268.020900528612, 1256.697372281904, 1169.175309516927, 1004.6921412213857, 777.997540230119];
let D_y=[-309.016994374943, -294.795312091902, -252.853879190098, -185.326719283223, -95.649684316156, 11.614365146148, 131.007722997453, 256.4555313384356, 381.5748755483187, 499.999553602047];
let D_z=[0.0, 45.9328940905318, 64.310209157048, 34.045701825333, -54.355561600143, -196.09680788303, -372.3936661855586, -553.755245520137, -705.607999071747, -795.147703469983];
let E_x=[587.785252292473, 675.9091338328712, 909.99158612617, 1210.3938199395245, 1477.30343813838, 1626.229203908635, 1615.9530188817862, 1458.602399841107, 1209.1904760391626, 940.457413123589];
let E_y=[-809.016994374943, -754.609693218417, -598.867212724859, -362.900630242516, -77.7288431474125, 221.120021379916, 499.639630251153, 730.8534241638246, 898.7602277641327, 999.999724110492];
let E_z=[0.0, 329.7909080211098, 558.789764168742, 620.979683368907, 506.518416566851, 261.899046514987, -30.3236315571126, -283.302643537069, -436.042137434427, -470.228282011263];
let F_x=[0.0, 112.2357331054292, 445.346582401934, 964.7232250402445, 1560.9279974375086, 2044.007996217583, 2210.585722132353, 1956.9645975887959, 1361.8056626818336, 668.112360714574];
let F_y=[-1000.000000000003, -991.455488769022, -945.9469110659, -815.869888484036, -556.0630759713215, -157.179558784815, 334.831137381725, 824.3450532010145, 1196.6717348784236, 1361.803217239018];
let F_z=[0.0, 420.0260325152219, 772.347051011647, 962.199291744607, 888.839362946838, 515.505670234053, -65.1965458766806, -636.658620430309, -955.58361795838, -890.814083053614];
let G_x=[-587.785252292477, -483.8386032235218, -121.116127413089, 550.9094886890995, 1401.5803176718505, 2093.8740142581028, 2290.159825837677, 1910.2842205675506, 1193.4542728068086, 505.652244672562];
let G_y=[-809.016994374943, -908.1289636271093, -1122.53417209949, -1259.159848898384, -1143.8231866984136, -736.197376265973, -155.426891978481, 395.4858986119415, 750.0467972737997, 861.803369747256];
let G_z=[0.0, 279.6049264525419, 599.422359657937, 842.959139727485, 783.424086817244, 305.22547969239, -433.0022526261076, -1079.227009695076, -1348.203008573422, -1215.733880009623];
let H_x=[-951.056516295157, -867.6793788411998, -509.398420690407, 229.3848629326675, 1128.1249680748886, 1724.8029157058909, 1754.2515820204412, 1389.1845275827536, 1000.9650175690067, 777.997152037833];
let H_y=[-309.016994374943, -538.8281049650983, -1041.3432827278552, -1413.787499180767, -1365.6872026909625, -923.465764865701, -352.421252253846, 93.1017197046865, 346.3520625214167, 499.9994302209];
let H_z=[0.0, -33.8422716763341, 125.491023428247, 338.302606974322, 275.521988539858, -153.776792736439, -669.5642687625536, -941.441199221627, -921.653528440928, -795.148369054332];
let I_x=[-951.056516295157, -881.754740613518, -527.5753723046956, 202.4997654069654, 961.7054625165605, 1314.4388521201, 1279.1854720140193, 1182.0430089086026, 1123.7252794297158, 940.457511228256];
let I_y=[309.016994374947, -35.1174476748613, -742.5062696575973, -1182.438459323432, -1042.2335541380176, -527.366329093207, -7.542018002962, 374.6728859264895, 697.3618017189627, 999.998954695597];
let I_z=[0.0, -391.6738929359831, -415.186375118569, -234.166452921692, -224.126184335412, -391.836834633799, -476.3376759861266, -431.75886595515, -428.005787286915, -470.228196601313];
let J_x=[-587.785252292477, -639.627997821507, -620.0232127341316, -231.7882453816846, 431.6249644512015, 833.6432484340818, 746.2487795711652, 577.0217199942886, 602.4275333933027, 587.785680573433];
let J_y=[809.016994374947, 530.0903022927927, -169.3688824570483, -871.978327237853, -1095.4940245023436, -746.995426109363, -190.874133574681, 248.6715071968785, 574.6944755874647, 809.016442594807];
let J_z=[0.0, -453.9703699755459, -627.160296729144, -545.573648279699, -537.405610914103, -712.094010150866, -729.9788171643256, -425.52157737806164, -119.513650714185, -0.000303783001];
let K_x=[0.0, -240.67023584285, -741.0456916999506, -800.1615031716356, -33.4400926600085, 774.379979737612, 828.0158422922084, 489.4640619932823, 356.1977706311117, 425.325006518722];
let K_y=[999.999999999997, 924.8285850671737, 394.7715149983327, -677.7941195143, -1482.3968377733654, -1357.622253839097, -671.049637370562, -94.2735366915895, 194.6309496633547, 309.016747609856];
let K_z=[0.0, -195.1646445376619, -405.653676525644, -399.935931495495, -410.967021127499, -786.8519762163115, -1110.3886543904996, -932.1657963797417, -540.094952536222, -324.920056418725];
let first_x=[-224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276, -224.51398828979276];
let first_y=[690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522, 690.9830056250522];
let first_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let B_C_x=[587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473, 587.785252292473];
let B_C_y=[427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176, 427.05098312484176];
let B_C_z=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
let D_E_x=[587.785252292473, 634.813615745343, 765.490812918396, 950.7332331334202, 1148.769258779525, 1313.764159267375, 1405.3373438890233, 1397.043979004716, 1282.0980029206057, 1075.165756543879];
let D_E_y=[-427.050983124843, -407.397101586882, -349.435466853463, -256.11522702591, -132.184612711734, 16.050657874222, 181.048220393747, 354.4128277068039, 527.323508754767, 690.982388718256];
let D_E_z=[0.0, 175.9968627659568, 308.187760098117, 361.998427155859, 319.441170744509, 183.094314556705, -24.111968114467, -263.2758636280978, -487.201594486893, -649.838923094567];
let F_G_x=[-224.513988289796, -144.1638655057318, 123.367210474315, 611.2248210190145, 1264.335557436682, 1891.120250459445, 2227.099528959069, 2085.7635975839207, 1493.0070036613706, 698.794150782495];
let F_G_y=[-690.983005625053, -734.7099409453095, -829.087813155715, -882.10334605686, -793.2262644917776, -506.74650398362, -46.711515117167, 483.6150813725866, 939.0270859470022, 1190.982518973434];
let F_G_z=[0.0, 300.6987378377412, 603.3166719697973, 833.552328303143, 847.795724030627, 533.570048764345, -72.3051504173452, -751.60181356663, -1205.190262005557, -1231.0742049495];
let H_I_x=[-726.542528005357, -674.6187711412298, -413.225721605179, 166.8887164437105, 886.4295586991615, 1381.0765365255459, 1486.4925508549272, 1365.6215334060485, 1226.993395391871, 1075.165556098369];
let H_I_y=[-3e-12, -224.3487063489383, -716.884763620944, -1095.79350314659, -1099.8347937129206, -765.5450520100204, -318.951025425676, 65.7304237829905, 381.1346835985797, 690.981771811637];
let H_I_z=[0.0, -132.4746362979381, -51.640326365974, 136.134152682959, 145.892287168681, -100.755490818854, -399.2258162707065, -561.186506659777, -615.713378346053, -649.839323985039];
let last_x=[-224.513988289796, -340.007842187979, -540.9854948921337, -433.2825535596186, 153.8763271463275, 716.6333538729958, 749.9921557508542, 529.5026760437265, 506.5776286282617, 587.785073008052];
let last_y=[690.983005625057, 556.7491934015167, 75.1716252669047, -666.748152756105, -1173.4389534995905, -1069.064999167895, -572.309777916367, -108.3991989919975, 211.6126081939297, 427.050431345194];
let last_z=[0.0, -218.5662501872351, -344.5810813031826, -294.2200069605391, -287.0492323869869, -543.340022242392, -749.7492524336676, -552.566785843881, -189.387730864601, -0.000358568367];


let sec=floor(millis()/1000);
let steparray=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 8, 7, 6, 5, 4, 3, 2, 1];
let t=steparray[sec%18];

background(0)

let angle=((sec*5)%360);




//adapted from
//from https://discourse.processing.org/t/how-to-rotate-around-a-sphere/25072/24
//and math.fandom.com/wiki/Ellipsoid
//and Simon Greenwold.

  let latitude = (frameCount%360)*3.141/180;
  let longitude = (((frameCount-(latitude/2))/5)%360)*3.141/180;
  let radius=5000;
  
  let cam_x = radius * cos(latitude)*cos(longitude);
  let cam_y = radius * cos(latitude)*sin(longitude);
  let cam_z = radius * sin(latitude);
  camera(cam_x, cam_y, cam_z, 0, 0, 0, 0, 1, 0);

/**
 * Points and Lines. 
 * 
 * Points and lines can be used to draw basic geometry.
 * Change the value of the variable 'd' to scale the form.
 * The four variables set the positions based on the value of 'd'. 
 */




//let cam_x=350 * cos(angle);
//let cam_y=350*sin(angle);
//let cam_x=350*cos(angle);
//let cam_y=350*sin(angle);
//console.log(angle,cam_x,cam_y);

//camera(cam_x,cam_y,-900,0,0,0,0,1,0);


fill(127);

beginShape();
vertex(A_x[t],A_y[t],A_z[t]);
vertex(B_x[t],B_y[t],B_z[t]);
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(first_x[t],first_y[t],first_z[t]);
endShape(CLOSE);
beginShape();
vertex(B_x[t],B_y[t],B_z[t]);
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(C_x[t],C_y[t],C_z[t]);
endShape(CLOSE);
beginShape();
vertex(B_C_x[t],B_C_y[t],B_C_z[t]);
vertex(C_x[t],C_y[t],C_z[t]);
vertex(D_x[t],D_y[t],D_z[t]);
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
endShape(CLOSE);
beginShape();
vertex(D_x[t],D_y[t],D_z[t]);
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
vertex(E_x[t],E_y[t],E_z[t]);
endShape(CLOSE);
beginShape();
vertex(D_E_x[t],D_E_y[t],D_E_z[t]);
vertex(E_x[t],E_y[t],E_z[t]);
vertex(F_x[t],F_y[t],F_z[t]);
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
endShape(CLOSE);
beginShape();
vertex(F_x[t],F_y[t],F_z[t]);
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
vertex(G_x[t],G_y[t],G_z[t]);
endShape(CLOSE);
beginShape();
vertex(F_G_x[t],F_G_y[t],F_G_z[t]);
vertex(G_x[t],G_y[t],G_z[t]);
vertex(H_x[t],H_y[t],H_z[t]);
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
endShape(CLOSE);
beginShape();
vertex(H_x[t],H_y[t],H_z[t]);
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
vertex(I_x[t],I_y[t],I_z[t]);
endShape(CLOSE);
beginShape();
vertex(H_I_x[t],H_I_y[t],H_I_z[t]);
vertex(I_x[t],I_y[t],I_z[t]);
vertex(J_x[t],J_y[t],J_z[t]);
vertex(last_x[t],last_y[t],last_z[t]);
endShape(CLOSE);
beginShape();
vertex(J_x[t],J_y[t],J_z[t]);
vertex(K_x[t],K_y[t],K_z[t]);
vertex(last_x[t],last_y[t],last_z[t]);
endShape(CLOSE);

}

function polygon( x, y,  radius,  npoints) {
  var angle = 3 / npoints;
  beginShape();
  for (var a = 0; a < TWO_PI; a += angle) {
    var sx = x + cos(a) * radius;
    var sy = y + sin(a) * radius;
    vertex(sx, sy);
  }
  endShape(CLOSE);
}

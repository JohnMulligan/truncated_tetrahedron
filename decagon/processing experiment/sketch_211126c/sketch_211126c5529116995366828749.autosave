

float[] ax = {0.0, 109.8076209688594, 46.410161424564, 299.9999998454801, 16.987297735283136, -4.874635708748256e-07, -5.628761708748256e-07, -5.628761708748256e-07, -5.628761708748256e-07, -5.628761708748256e-07, -5.628761708748256e-07, -5.628761708748256e-07};
float[] ay = {300.0, 329.4228633613887, 92.8203232712827, -160.76951514963298, -236.60254012780985, -300.0000001784245, -300.00000010301187, -300.00000010301187, -300.00000010301187, -300.00000010301187, -300.00000010301187, -300.00000010301187};
float[] az = {0.0, -132.867294833701, -153.421936962604, -265.734590109775, -76.7109687792743, -2.94917905208081e-07, 1.70269029728323e-07, 1.70269029728323e-07, 1.70269029728323e-07, 1.70269029728323e-07, 1.70269029728323e-07, 1.70269029728323e-07};
float[] bx = {150.0, 150.0, 133.012701917973, 340.1923786655427, -6.217782656006866, -69.61524236862508, -150.00000043595907, -150.00000043595907, -150.00000043595907, -150.00000043595907, -150.00000043595907, -150.00000043595907};
float[] by = {259.807621135332, 259.807621135332, 196.4101616098882, -10.769515137681482, -103.58983811372566, -340.1923788320151, -259.8076207646816, -259.8076207646816, -259.8076207646816, -259.8076207646816, -259.8076207646816, -259.8076207646816};
float[] bz = {0.0, 0.0, -76.7109684387351, -265.734589814859, -153.421937132874, -132.867295423534, -1.7027038268224699e-07, -1.7027038268224699e-07, -1.7027038268224699e-07, -1.7027038268224699e-07, -1.7027038268224699e-07, -1.7027038268224699e-07};
float[] cx = {259.807621135332, 259.807621135332, 259.807621135332, 340.1923787428024, 103.58983865269813, 10.769515649050929, -196.41016148297106, -196.41016148297106, -196.41016148297106, -196.41016148297106, -196.41016148297106, -196.41016148297106};
float[] cy = {150.0, 150.0, 150.0, 69.61524239252952, 6.217782848233541, -340.1923785763301, -133.0127014443081, -133.0127014443081, -133.0127014443081, -133.0127014443081, -133.0127014443081, -133.0127014443081};
float[] cz = {0.0, 0.0, 0.0, -132.8672948337, -153.421936962604, -265.734590109777, -76.7109687792752, -76.7109687792752, -76.7109687792752, -76.7109687792752, -76.7109687792752, -76.7109687792752};
float[] dx = {300.0, 300.0, 300.0, 300.0, 236.60254047455695, 160.76951563709792, -92.82032270840807, -92.82032270840807, -92.82032270840807, -92.82032270840807, -92.82032270840807, -92.82032270840807};
float[] dy = {1.83697019872103e-14, 1.83697019872103e-14, 1.83697019872103e-14, 1.83697019872103e-14, -16.98729808202726, -299.9999996670554, -46.4101613215501, -46.4101613215501, -46.4101613215501, -46.4101613215501, -46.4101613215501, -46.4101613215501};
float[] dz = {0.0, 0.0, 0.0, 0.0, -76.7109684387342, -265.73458981486, -153.421937132874, -153.421937132874, -153.421937132874, -153.421937132874, -153.421937132874, -153.421937132874};
float[] ex = {259.807621135332, 259.807621135332, 259.807621135332, 259.807621135332, 259.807621135332, 230.38475777394294, 57.17967722813308, 57.17967722813308, 57.17967722813308, 57.17967722813308, 57.17967722813308, 57.17967722813308};
float[] ey = {-150.0, -150.0, -150.0, -150.0, -150.0, -259.8076209688598, -86.6025404230501, -86.6025404230501, -86.6025404230501, -86.6025404230501, -86.6025404230501, -86.6025404230501};
float[] ez = {0.0, 0.0, 0.0, 0.0, 0.0, -132.867294833701, -153.421936962604, -153.421936962604, -153.421936962604, -153.421936962604, -153.421936962604, -153.421936962604};
float[] fx = {150.0, 150.0, 150.0, 150.0, 150.0, 150.0, 103.58983855658383, 103.58983855658383, 103.58983855658383, 103.58983855658383, 103.58983855658383, 103.58983855658383};
float[] fy = {-259.807621135332, -259.807621135332, -259.807621135332, -259.807621135332, -259.807621135332, -259.807621135332, -213.39745969191588, -213.39745969191588, -213.39745969191588, -213.39745969191588, -213.39745969191588, -213.39745969191588};
float[] fz = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -76.7109684387348, -76.7109684387348, -76.7109684387348, -76.7109684387348, -76.7109684387348, -76.7109684387348};
float[] gx = {3.67394039744206e-14, 3.67394039744206e-14, 3.67394039744206e-14, 3.67394039744206e-14, 3.67394039744206e-14, 3.67394039744206e-14, 3.67394039744206e-14, 3.67394039744206e-14, 3.67394039744206e-14, 3.67394039744206e-14, 3.67394039744206e-14, 3.67394039744206e-14};
float[] gy = {-300.0, -300.0, -300.0, -300.0, -300.0, -300.0, -300.0, -300.0, -300.0, -300.0, -300.0, -300.0};
float[] gz = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
float[] hx = {-150.0, -150.0, -150.0, -150.0, -150.0, -150.0, -150.0, -150.0, -150.0, -150.0, -150.0, -150.0};
float[] hy = {-259.807621135332, -259.807621135332, -259.807621135332, -259.807621135332, -259.807621135332, -259.807621135332, -259.807621135332, -259.807621135332, -259.807621135332, -259.807621135332, -259.807621135332, -259.807621135332};
float[] hz = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
float[] ix = {-259.807621135331, -259.807621135331, -259.807621135331, -259.807621135331, -259.807621135331, -259.807621135331, -259.807621135331, -259.807621135331, -259.807621135331, -259.807621135331, -259.807621135331, -196.4101616098883};
float[] iy = {-150.0, -150.0, -150.0, -150.0, -150.0, -150.0, -150.0, -150.0, -150.0, -150.0, -150.0, -133.012701917973};
float[] iz = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 76.7109684387338};
float[] jx = {-300.0, -300.0, -300.0, -300.0, -300.0, -300.0, -300.0, -300.0, -300.0, -300.0, -329.4228633613887, -92.8203232712842};
float[] jy = {-5.51091059616309e-14, -5.51091059616309e-14, -5.51091059616309e-14, -5.51091059616309e-14, -5.51091059616309e-14, -5.51091059616309e-14, -5.51091059616309e-14, -5.51091059616309e-14, -5.51091059616309e-14, -5.51091059616309e-14, -109.8076209688591, -46.410161424563};
float[] jz = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 132.8672948337, 153.421936962604};
float[] kx = {-259.807621135332, -259.807621135332, -259.807621135332, -259.807621135332, -259.807621135332, -259.807621135332, -259.807621135332, -259.807621135332, -259.807621135332, -213.3974596919158, -289.2304845293748, 57.179676792175};
float[] ky = {150.0, 150.0, 150.0, 150.0, 150.0, 150.0, 150.0, 150.0, 150.0, 103.58983855658394, -179.422863028444, -86.6025400524};
float[] kz = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 76.7109684387347, 265.734589814859, 153.421937132874};
float[] lx = {-150.0, -150.0, -150.0, -150.0, -150.0, -150.0, -150.0, -150.0, -259.8076209688595, -86.60254042305, -179.4228634266969, 103.589838683502};
float[] ly = {259.807621135331, 259.807621135331, 259.807621135331, 259.807621135331, 259.807621135331, 259.807621135331, 259.807621135331, 259.807621135331, 230.3847577739422, 57.179677228133144, -289.23048419643, -213.3974592182523};
float[] lz = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 132.867294833701, 153.421936962604, 265.734590109776, 76.7109687792748};
float[] mx = {173.20508075688792, 173.20508075688792, 173.20508075688792, 299.99999980777443, 26.794919354094134, -46.41016142456307, -173.20508091937606, -173.20508091937606, -173.20508091937606, -173.20508091937606, -173.20508091937606, -173.20508091937606};
float[] my = {173.20508075688764, 173.20508075688764, 173.20508075688764, 46.41016170600112, -26.79491896964246, -299.999999807774, -173.2050803129612, -173.2050803129612, -173.2050803129612, -173.2050803129612, -173.2050803129612, -173.2050803129612};
float[] mz = {0.0, 0.0, 0.0, -209.578263272435, -121.000066850922, -209.578263737622, -2.68575263362436e-07, -2.68575263362436e-07, -2.68575263362436e-07, -2.68575263362436e-07, -2.68575263362436e-07, -2.68575263362436e-07};
float[] nx = {236.60254037844413, 236.60254037844413, 236.60254037844413, 236.60254037844413, 236.60254037844413, 190.19237893502793, -9.807620843009872, -9.807620843009872, -9.807620843009872, -9.807620843009872, -9.807620843009872, -9.807620843009872};
float[] ny = {-63.39745962155586, -63.39745962155586, -63.39745962155586, -63.39745962155586, -63.39745962155586, -236.60254011585906, -36.6025403378211, -36.6025403378211, -36.6025403378211, -36.6025403378211, -36.6025403378211, -36.6025403378211};
float[] nz = {0.0, 0.0, 0.0, 0.0, 0.0, -209.578263272436, -121.000066850923, -121.000066850923, -121.000066850923, -121.000066850923, -121.000066850923, -121.000066850923};
float[] ox = {63.39745962155593, 63.39745962155593, 63.39745962155593, 63.39745962155593, 63.39745962155593, 63.39745962155593, 63.39745962155593, 63.39745962155593, 63.39745962155593, 63.39745962155593, 63.39745962155593, 63.39745962155593};
float[] oy = {-236.6025403784441, -236.6025403784441, -236.6025403784441, -236.6025403784441, -236.6025403784441, -236.6025403784441, -236.6025403784441, -236.6025403784441, -236.6025403784441, -236.6025403784441, -236.6025403784441, -236.6025403784441};
float[] oz = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
float[] px = {-173.20508075688792, -173.20508075688792, -173.20508075688792, -173.20508075688792, -173.20508075688792, -173.20508075688792, -173.20508075688792, -173.20508075688792, -173.20508075688792, -173.20508075688792, -173.20508075688792, -173.20508075688792};
float[] py = {-173.20508075688764, -173.20508075688764, -173.20508075688764, -173.20508075688764, -173.20508075688764, -173.20508075688764, -173.20508075688764, -173.20508075688764, -173.20508075688764, -173.20508075688764, -173.20508075688764, -173.20508075688764};
float[] pz = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
float[] qx = {-236.60254037844413, -236.60254037844413, -236.60254037844413, -236.60254037844413, -236.60254037844413, -236.60254037844413, -236.60254037844413, -236.60254037844413, -236.60254037844413, -236.6025403784442, -283.0127018218603, -9.80762136818};
float[] qy = {63.39745962155583, 63.39745962155583, 63.39745962155583, 63.39745962155583, 63.39745962155583, 63.39745962155583, 63.39745962155583, 63.39745962155583, 63.39745962155583, 63.397459621555846, -109.8076208727462, -36.602540197102996};
float[] qz = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -5.6843418860808e-14, 209.578263272435, 121.000066850923};
float[] rx = {-63.39745962155648, 109.8076208727465, 36.602540197102996, 236.6025402565777, 63.39745915586313, 63.39745909638832, 63.39745925887504, 63.39745925887504, 63.39745925887504, 63.39745925887504, 63.39745925887504, 63.39745925887504};
float[] ry = {236.6025403784435, 283.0127018218597, 9.807621368178, -190.19237869129597, -236.60254029719985, -236.6025405191629, -236.6025406816496, -236.6025406816496, -236.6025406816496, -236.6025406816496, -236.6025406816496, -236.6025406816496};
float[] rz = {0.0, -209.578263272436, -121.000066850923, -209.57826373762, -2.68574737560812e-07, -6.72704013229894e-13, 2.68573615412507e-07, 2.68573615412507e-07, 2.68573615412507e-07, 2.68573615412507e-07, 2.68573615412507e-07, 2.68573615412507e-07};
float[] sx = {-63.39745962155648, -63.39745962155648, -63.39745962155648, -63.39745962155648, -63.39745962155648, -63.39745962155648, -63.39745962155648, -63.39745962155648, -236.60254011585909, -36.602540337822, -109.807621116479, 63.397459984238};
float[] sy = {236.6025403784435, 236.6025403784435, 236.6025403784435, 236.6025403784435, 236.6025403784435, 236.6025403784435, 236.6025403784435, 236.6025403784435, 190.1923789350275, -9.807620843009055, -283.01270168114, -236.6025400752357};
float[] sz = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 209.578263272435, 121.000066850922, 209.578263737622, 2.68575348627564e-07};
float[] tx = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -16.987298082027, -299.9999996670559, -46.41016132155, -109.807621034168, 5.62875e-07};
float[] ty = {300.0, 300.0, 300.0, 300.0, 300.0, 300.0, 300.0, 236.6025404745564, 160.7695156370975, -92.82032270840806, -329.422863426697, -299.9999998969869};
float[] tz = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 76.7109684387349, 265.73458981486, 153.421937132874, 132.867295423533, 1.70270773480752e-07};




void setup() {
  size(1400, 875, P3D);
  fill(204);
}

void draw() {
  lights();
  background(0);
  
  
  
  /**
 * Primitives 3D. 
 * 
 * Placing mathematically 3D objects in synthetic space.
 * The lights() method reveals their imagined dimension.
 * The box() and sphere() functions each have one parameter
 * which is used to specify their size. These shapes are
 * positioned using the translate() function.
 */
 
background(0);
lights();


//adapted from
//from https://discourse.processing.org/t/how-to-rotate-around-a-sphere/25072/24
//and math.fandom.com/wiki/Ellipsoid
//and Simon Greenwold.

  float latitude = (frameCount%360)*3.141/180;
  float longitude = (((frameCount-(latitude/2))/5)%360)*3.141/180;
  float radius=1000;
  
  float cam_x = radius * cos(latitude)*cos(longitude);
  float cam_y = radius * cos(latitude)*sin(longitude);
  float cam_z = radius * sin(latitude);
  camera(cam_x, cam_y, cam_z, 0, 0, 0, 0, 1, 0);

/**
 * Points and Lines. 
 * 
 * Points and lines can be used to draw basic geometry.
 * Change the value of the variable 'd' to scale the form.
 * The four variables set the positions based on the value of 'd'. 
 */


translate(0, 0, 0);


//float t = millis() / 960.00f;

int [] steparray={0,1,2,3,4,5,6,7,8,9,10,11,10,9,8,7,6,5,4,3,2,1};

int t=steparray[millis()/1000 % 22];



fill(127);





beginShape();
vertex(lx[t],ly[t],lz[t]);
vertex(sx[t],sy[t],sz[t]);
vertex(tx[t],ty[t],tz[t]);
endShape(CLOSE);
beginShape();
vertex(ax[t],ay[t],az[t]);
vertex(rx[t],ry[t],rz[t]);
vertex(mx[t],my[t],mz[t]);
vertex(bx[t],by[t],bz[t]);
endShape(CLOSE);
beginShape();
vertex(bx[t],by[t],bz[t]);
vertex(mx[t],my[t],mz[t]);
vertex(cx[t],cy[t],cz[t]);
endShape(CLOSE);
beginShape();
vertex(cx[t],cy[t],cz[t]);
vertex(mx[t],my[t],mz[t]);
vertex(nx[t],ny[t],nz[t]);
vertex(dx[t],dy[t],dz[t]);
endShape(CLOSE);
beginShape();
vertex(dx[t],dy[t],dz[t]);
vertex(nx[t],ny[t],nz[t]);
vertex(ex[t],ey[t],ez[t]);
endShape(CLOSE);
beginShape();
vertex(nx[t],ny[t],nz[t]);
vertex(ex[t],ey[t],ez[t]);
vertex(fx[t],fy[t],fz[t]);
vertex(ox[t],oy[t],oz[t]);
endShape(CLOSE);
beginShape();
vertex(fx[t],fy[t],fz[t]);
vertex(ox[t],oy[t],oz[t]);
vertex(gx[t],gy[t],gz[t]);
endShape(CLOSE);
beginShape();
vertex(gx[t],gy[t],gz[t]);
vertex(hx[t],hy[t],hz[t]);
vertex(px[t],py[t],pz[t]);
vertex(ox[t],oy[t],oz[t]);
endShape(CLOSE);
beginShape();
vertex(hx[t],hy[t],hz[t]);
vertex(ix[t],iy[t],iz[t]);
vertex(px[t],py[t],pz[t]);
endShape(CLOSE);
beginShape();
vertex(jx[t],jy[t],jz[t]);
vertex(ix[t],iy[t],iz[t]);
vertex(px[t],py[t],pz[t]);
vertex(qx[t],qy[t],qz[t]);
endShape(CLOSE);
beginShape();
vertex(jx[t],jy[t],jz[t]);
vertex(qx[t],qy[t],qz[t]);
vertex(kx[t],ky[t],kz[t]);
endShape(CLOSE);
beginShape();
vertex(kx[t],ky[t],kz[t]);
vertex(qx[t],qy[t],qz[t]);
vertex(sx[t],sy[t],sz[t]);
vertex(lx[t],ly[t],lz[t]);
endShape(CLOSE);

// Draw white points
//stroke(255);
//point(p1, p1);
//point(p1, p3); 
//point(p2, p4);
//point(p3, p1); 
//point(p4, p2);
//point(p4, p4);



}

void polygon(float x, float y, float radius, int npoints) {
  float angle = TWO_PI / npoints;
  beginShape();
  for (float a = 0; a < TWO_PI; a += angle) {
    float sx = x + cos(a) * radius;
    float sy = y + sin(a) * radius;
    vertex(sx, sy);
  }
  endShape(CLOSE);
}
